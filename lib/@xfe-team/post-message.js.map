{"version":3,"sources":["webpack://@xfe-team/post-message/webpack/universalModuleDefinition","webpack://@xfe-team/post-message/webpack/bootstrap","webpack://@xfe-team/post-message/./src/index.js"],"names":["DEFAULT_EVENT_NAME","DEFAULT_TIMEOUT","PostMessage","namespace","uid","targetOrigin","event","post","bind","on","data","window","parent","postMessage","callback","timeout","callbackWhenDispose","timeoutHook","setTimeout","error","code","message","undefined","listener","e","origin","originalEvent","clearTimeout","addEventListener","Promise","resolve","reject","onOptions","emit"],"mappings":"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","file":"@xfe-team/post-message.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@xfe-team/post-message\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@xfe-team/post-message\"] = factory();\n\telse\n\t\troot[\"@xfe-team/post-message\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const DEFAULT_EVENT_NAME = '@@DEFAULT@@';\nconst DEFAULT_TIMEOUT = 10 * 1000;\n\nexport default class PostMessage {\n  /**\n   * @param {string} namespace - 命名空间\n   * @param {string|number} [uid] - 默认 uid, 用于区分不同的 post message 使用\n   * @param {string} [targetOrigin] - 与 window.postMessage 中的 targetOrigin 同样含义.\n   * 详细请参考: https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage, 默认: '*'\n   * @param {string} [event] - 默认事件名称, 当方法 on 或 emit 不传入时将直接使用 event 作为默认值\n   */\n  constructor({ namespace, uid, targetOrigin = '*', event = DEFAULT_EVENT_NAME }) {\n    this.namespace = namespace;\n    this.uid = uid;\n    this.targetOrigin = targetOrigin;\n    this.event = event;\n    this.post = this.post.bind(this);\n    this.on = this.on.bind(this);\n  }\n\n  /**\n   * emit 发送 post message\n   * @param {(data, error) => void} callback - 请求数据\n   * @param {string} [event] - 事件名称\n   * @param {string} [uid] - 事件唯一 id, 通过这个可以确保每一次 post message 都是唯一的, 推荐用自增 id\n   * @param {string} [namespace] - 命名空间, 我们可以使用一个项目名作为一个命名空间, 当不传入时将直接使用 PostMessage 构造函数时当前实例的命名空间\n   * @param {string} [targetOrigin] - 事件名称\n   */\n  emit(data, { event = this.event, uid = this.uid, namespace = this.namespace, targetOrigin = this.targetOrigin }) {\n    window.parent.postMessage({\n      event,\n      data,\n      uid,\n      namespace\n    }, targetOrigin);\n  }\n\n  /**\n   * 监听事件\n   * @param {object|string} data - 请求数据\n   * @param {string} [event] - 事件名称\n   * @param {string} [uid] - 事件唯一 id, 通过这个可以确保每一次 post message 都是唯一的, 推荐用自增 id\n   * @param {string} [namespace] - 命名空间, 我们可以使用一个项目名作为一个命名空间, 当不传入时将直接使用 PostMessage 构造函数时当前实例的命名空间\n   * @param {string} [targetOrigin] - 事件名称\n   * @param {boolean} [callbackWhenDispose] - 是否在销毁时触发 callback 回调\n   * @param {number|false|undefined} [timeout] - 回调超时时间\n   */\n  on(callback,\n    {\n      targetOrigin = this.targetOrigin,\n      uid = this.uid,\n      event = this.event,\n      namespace = this.namespace,\n      timeout,\n      callbackWhenDispose = false\n    } = {}\n  ) {\n    let timeoutHook = timeout ? setTimeout(() => {\n      const error = {\n        code: 'timeout',\n        message: 'timeout'\n      };\n\n      callback(null, error);\n    }, timeout) : undefined;\n\n    const listener = (e) => {\n      const origin = e.origin || e.originalEvent.origin;\n      const { data } = e.data;\n\n      if (origin !== targetOrigin && data && data.event === event && data.uid === uid && namespace === this.namespace) {\n        clearTimeout(timeoutHook);\n        callback(data);\n      }\n    };\n\n    window.addEventListener('message', listener);\n    return () => {\n      window.addEventListener('message', listener);\n      if (callbackWhenDispose) {\n        const error = {\n          code: 'disposed',\n          message: 'disposed'\n        };\n\n        callback(null, error);\n      } else {\n        timeout && clearTimeout(timeoutHook);\n      }\n    };\n  }\n\n  /**\n   * promise emit 发送 post message\n   * @param {object|string} data - 请求数据\n   * @param {string} event - 事件名称\n   * @param {string} uid - 事件唯一 id, 通过这个可以确保每一次 post message 都是唯一的, 推荐用自增 id\n   * @param {string} namespace - 命名空间, 我们可以使用一个项目名作为一个命名空间, 当不传入时将直接使用 PostMessage 构造函数时当前实例的命名空间\n   * @param {string} targetOrigin - 事件名称\n   */\n  pEmit(data, { event, uid, namespace, targetOrigin, timeout = DEFAULT_TIMEOUT }) {\n    return new Promise((resolve, reject) => {\n      const onOptions = { targetOrigin, uid, event, namespace, timeout, callbackWhenDispose: true };\n\n      this.on((data, error) => {\n        error ? reject(error) : resolve(data);\n      }, onOptions);\n      this.emit(data, { event, uid, namespace, targetOrigin });\n    });\n  }\n}\n"],"sourceRoot":""}