{"version":3,"sources":["../static/js/49.ed9eb2ad.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.js"],"names":["webpackJsonp","1324","module","__webpack_exports__","__webpack_require__","conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","keywords","symbols","escapes","integersuffix","floatsuffix","tokenizer","root","cases","token","include","next","whitespace","comment","string","litstring"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLA,2HAKO,IAAIC,IACPC,UACIC,YAAa,KACbC,cAAe,KAAM,OAEzBC,WACK,IAAK,MACL,IAAK,MACL,IAAK,MAEVC,mBACMC,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAExBC,mBACMF,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAMC,MAAO,MAEzBE,SACIC,SACIC,MAAO,GAAIC,QAAO,0DAClBC,IAAK,GAAID,QAAO,mEAIjBE,GACPC,aAAc,GACdC,aAAc,MACdC,UACI,WAAY,MAAO,SAAU,KAC7B,SAAU,MAAO,OAAQ,QACzB,QAAS,UAAW,YACpB,QAAS,aAAc,cACvB,WAAY,QAAS,UACrB,WAAY,KAAM,OAAQ,WAC1B,SAAU,OAAQ,OAAQ,MAC1B,YAAa,QAAS,QAAS,WAC/B,SAAU,QAAS,UAAW,MAC9B,MAAO,WAAY,QAAS,UAC5B,SAAU,KAAM,KAAM,UAAW,UACjC,SAAU,YAAa,WAAY,OACnC,MAAO,MAAO,MAAO,OAAQ,OAAQ,MACrC,QAAS,SAAU,MAAO,SAAU,UACpC,YAAa,SAAU,QAAS,MAAO,MACvC,OAAQ,KAAM,OAAQ,KAAM,SAC5B,WAAY,UAAW,WAAY,UACnC,YAAa,OAAQ,SAAU,MAAO,SACtC,SAAU,SAAU,SAAU,MAAO,OACrC,KAAM,OAAQ,WAAY,QAC1B,MAAO,OAAQ,SAAU,MACzB,MAAO,OAAQ,UAAW,WAC1B,OAAQ,QAAS,OAAQ,SAG7BC,QAAS,4BACTC,QAAS,wEACTC,cAAe,iBACfC,YAAa,UAEbC,WACIC,OAEK,gBACOC,OACI,aAAeC,MAAO,cACtB,WAAY,iBAItBC,QAAS,gBAEV,WAAY,eAEZ,oBAAqB,YAErB,aAAc,cACd,mBAAoB,cACpB,WAAY,cAEZ,uCAAwC,iBACxC,yCAA0C,iBAC1C,mBAAoB,iBACpB,iCAAkC,eAClC,2BAA4B,eAC5B,sBAAuB,WAEvB,QAAS,cAET,kBAAmB,mBACnB,MAAO,SAAU,gBACjB,IAAK,SAAU,cAEf,OAASD,MAAO,eAAgBE,KAAM,gBAEtC,aAAc,WACd,oBAAqB,SAAU,gBAAiB,YAChD,IAAK,mBAEVC,aACK,aAAc,KACd,aAAc,UAAW,aACzB,UAAW,YAEhBC,UACK,SAAU,YACV,OAAQ,UAAW,SACnB,KAAM,YACN,SAAU,YACV,KAAM,YAEXC,SACK,UAAW,WACX,WAAY,kBACZ,MAAO,0BACP,aACON,OACI,WAAaC,MAAO,SAAUE,KAAM,QACpC,WAAY,aAI5BI,YACK,QAAS,WACT,KAAM,kBACN,KAAON,MAAO,eAAgBE,KAAM","file":"static/js/49.ed9eb2ad.chunk.js","sourcesContent":["webpackJsonp([49],{\n\n/***/ 1324:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/var conf={comments:{lineComment:'//',blockComment:['(*','*)']},brackets:[['{','}'],['[',']'],['(',')']],autoClosingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\"',close:'\"'}],surroundingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\"',close:'\"'},{open:'\\'',close:'\\''}],folding:{markers:{start:new RegExp(\"^\\\\s*//\\\\s*#region\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#region(.*)\\\\*\\\\)\"),end:new RegExp(\"^\\\\s*//\\\\s*#endregion\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#endregion\\\\s*\\\\*\\\\)\")}}};var language={defaultToken:'',tokenPostfix:'.fs',keywords:['abstract','and','atomic','as','assert','asr','base','begin','break','checked','component','const','constraint','constructor','continue','class','default','delegate','do','done','downcast','downto','elif','else','end','exception','eager','event','external','extern','false','finally','for','fun','function','fixed','functor','global','if','in','include','inherit','inline','interface','internal','land','lor','lsl','lsr','lxor','lazy','let','match','member','mod','module','mutable','namespace','method','mixin','new','not','null','of','open','or','object','override','private','parallel','process','protected','pure','public','rec','return','static','sealed','struct','sig','then','to','true','tailcall','trait','try','type','upcast','use','val','void','virtual','volatile','when','while','with','yield'],// we include these common regular expressions\nsymbols:/[=><!~?:&|+\\-*\\^%;\\.,\\/]+/,escapes:/\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,integersuffix:/[uU]?[yslnLI]?/,floatsuffix:/[fFmM]?/,// The main tokenizer for our languages\ntokenizer:{root:[// identifiers and keywords\n[/[a-zA-Z_]\\w*/,{cases:{'@keywords':{token:'keyword.$0'},'@default':'identifier'}}],// whitespace\n{include:'@whitespace'},// [< attributes >].\n[/\\[<.*>\\]/,'annotation'],// Preprocessor directive\n[/^#(if|else|endif)/,'keyword'],// delimiters and operators\n[/[{}()\\[\\]]/,'@brackets'],[/[<>](?!@symbols)/,'@brackets'],[/@symbols/,'delimiter'],// numbers\n[/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/,'number.float'],[/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/,'number.float'],[/0x[0-9a-fA-F]+LF/,'number.float'],[/0x[0-9a-fA-F]+(@integersuffix)/,'number.hex'],[/0b[0-1]+(@integersuffix)/,'number.bin'],[/\\d+(@integersuffix)/,'number'],// delimiter: after number because of .\\d floats\n[/[;,.]/,'delimiter'],// strings\n[/\"([^\"\\\\]|\\\\.)*$/,'string.invalid'],[/\"\"\"/,'string','@string.\"\"\"'],[/\"/,'string','@string.\"'],// literal string\n[/\\@\"/,{token:'string.quote',next:'@litstring'}],// characters\n[/'[^\\\\']'B?/,'string'],[/(')(@escapes)(')/,['string','string.escape','string']],[/'/,'string.invalid']],whitespace:[[/[ \\t\\r\\n]+/,''],[/\\(\\*(?!\\))/,'comment','@comment'],[/\\/\\/.*$/,'comment']],comment:[[/[^*(]+/,'comment'],[/\\*\\)/,'comment','@pop'],[/\\*/,'comment'],[/\\(\\*\\)/,'comment'],[/\\(/,'comment']],string:[[/[^\\\\\"]+/,'string'],[/@escapes/,'string.escape'],[/\\\\./,'string.escape.invalid'],[/(\"\"\"|\"B?)/,{cases:{'$#==$S2':{token:'string',next:'@pop'},'@default':'string'}}]],litstring:[[/[^\"]+/,'string'],[/\"\"/,'string.escape'],[/\"/,{token:'string.quote',next:'@pop'}]]}};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/49.ed9eb2ad.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['(*', '*)'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*//\\\\s*#region\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#region(.*)\\\\*\\\\)\"),\r\n            end: new RegExp(\"^\\\\s*//\\\\s*#endregion\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#endregion\\\\s*\\\\*\\\\)\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.fs',\r\n    keywords: [\r\n        'abstract', 'and', 'atomic', 'as',\r\n        'assert', 'asr', 'base', 'begin',\r\n        'break', 'checked', 'component',\r\n        'const', 'constraint', 'constructor',\r\n        'continue', 'class', 'default',\r\n        'delegate', 'do', 'done', 'downcast',\r\n        'downto', 'elif', 'else', 'end',\r\n        'exception', 'eager', 'event', 'external',\r\n        'extern', 'false', 'finally', 'for',\r\n        'fun', 'function', 'fixed', 'functor',\r\n        'global', 'if', 'in', 'include', 'inherit',\r\n        'inline', 'interface', 'internal', 'land',\r\n        'lor', 'lsl', 'lsr', 'lxor', 'lazy', 'let',\r\n        'match', 'member', 'mod', 'module', 'mutable',\r\n        'namespace', 'method', 'mixin', 'new', 'not',\r\n        'null', 'of', 'open', 'or', 'object',\r\n        'override', 'private', 'parallel', 'process',\r\n        'protected', 'pure', 'public', 'rec', 'return',\r\n        'static', 'sealed', 'struct', 'sig', 'then',\r\n        'to', 'true', 'tailcall', 'trait',\r\n        'try', 'type', 'upcast', 'use',\r\n        'val', 'void', 'virtual', 'volatile',\r\n        'when', 'while', 'with', 'yield'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\^%;\\.,\\/]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    integersuffix: /[uU]?[yslnLI]?/,\r\n    floatsuffix: /[fFmM]?/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // [< attributes >].\r\n            [/\\[<.*>\\]/, 'annotation'],\r\n            // Preprocessor directive\r\n            [/^#(if|else|endif)/, 'keyword'],\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n            [/0x[0-9a-fA-F]+LF/, 'number.float'],\r\n            [/0x[0-9a-fA-F]+(@integersuffix)/, 'number.hex'],\r\n            [/0b[0-1]+(@integersuffix)/, 'number.bin'],\r\n            [/\\d+(@integersuffix)/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"\"\"/, 'string', '@string.\"\"\"'],\r\n            [/\"/, 'string', '@string.\"'],\r\n            // literal string\r\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\r\n            // characters\r\n            [/'[^\\\\']'B?/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/\\(\\*(?!\\))/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n        comment: [\r\n            [/[^*(]+/, 'comment'],\r\n            [/\\*\\)/, 'comment', '@pop'],\r\n            [/\\*/, 'comment'],\r\n            [/\\(\\*\\)/, 'comment'],\r\n            [/\\(/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/(\"\"\"|\"B?)/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }]\r\n        ],\r\n        litstring: [\r\n            [/[^\"]+/, 'string'],\r\n            [/\"\"/, 'string.escape'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.js"],"sourceRoot":""}