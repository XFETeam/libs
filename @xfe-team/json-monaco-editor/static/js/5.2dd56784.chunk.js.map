{"version":3,"sources":["../static/js/5.2dd56784.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/yaml/yaml.js"],"names":["webpackJsonp","1311","module","__webpack_exports__","__webpack_require__","conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","offSide","language","tokenPostfix","token","keywords","numberInteger","numberFloat","numberOctal","numberHex","numberInfinity","numberNaN","numberDate","escapes","tokenizer","root","include","cases","object","array","multiString","multiStringContinued","next","whitespace","comment","flowCollections","flowScalars","doubleQuotedString","blockStyle","flowNumber","tagHandle","anchor"],"mappings":"AAAAA,cAAc,IAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLA,2HAAO,IAAIC,IACPC,UACIC,YAAa,KAEjBC,WACK,IAAK,MACL,IAAK,MACL,IAAK,MAEVC,mBACMC,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAMC,MAAO,MAEzBC,mBACMF,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAMC,MAAO,MAEzBE,SACIC,SAAS,IAGNC,GACPC,aAAc,QACdR,WACMS,MAAO,oBAAqBP,KAAM,IAAKC,MAAO,MAC9CM,MAAO,mBAAoBP,KAAM,IAAKC,MAAO,MAEnDO,UAAW,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,OAAQ,OAAQ,OAAQ,KACtFC,cAAe,oBACfC,YAAa,sDACbC,YAAa,WACbC,UAAW,iBACXC,eAAgB,yBAChBC,UAAW,oBACXC,WAAY,0EACZC,QAAS,8CACTC,WACIC,OACMC,QAAS,gBACTA,QAAS,aAEV,YAAa,mBAEb,MAAO,4BACP,QAAS,0BAET,aAAc,cACbA,QAAS,YACTA,QAAS,eACTA,QAAS,qBACTA,QAAS,gBAEV,8BAA+B,WAC/B,4BAA6B,iBAC7B,4BAA6B,iBAC7B,0BAA2B,eAC3B,+BAAgC,oBAChC,0BAA2B,eAC3B,2BAA4B,gBAE5B,qCAAsC,OAAQ,QAAS,YAAa,WACnEA,QAAS,iBAEV,OACOC,OACI,YAAa,UACb,WAAY,aAK5BC,SACMF,QAAS,gBACTA,QAAS,aAEV,KAAM,YAAa,SAEnB,IAAK,oBAEL,SAAU,cAEV,mCAAoC,SAEnCA,QAAS,qBACTA,QAAS,iBAETA,QAAS,eACTA,QAAS,YACTA,QAAS,gBAEV,WACOC,OACI,YAAa,UACb,WAAY,aAK5BE,QACMH,QAAS,gBACTA,QAAS,aAEV,KAAM,YAAa,SAEnB,IAAK,oBAEJA,QAAS,qBACTA,QAAS,iBAETA,QAAS,eACTA,QAAS,YACTA,QAAS,gBAEV,WACOC,OACI,YAAa,UACb,WAAY,aAK5BG,cACK,WAAY,SAAU,6BAI3BC,uBACK,YACOJ,OACI,UAAW,SACX,YAAcb,MAAO,WAAYkB,KAAM,eAIvDC,aACK,aAAc,UAGnBC,UACK,OAAQ,YAGbC,kBACK,KAAM,YAAa,WACnB,KAAM,YAAa,YAGxBC,cACK,kBAAmB,mBACnB,kBAAmB,mBACnB,UAAW,WACX,IAAK,SAAU,wBAEpBC,qBACK,UAAW,WACX,WAAY,kBACZ,MAAO,0BACP,IAAK,SAAU,SAGpBC,aACK,mBAAoB,YAAa,iBAGtCC,aACK,kCAAmC,WACnC,gCAAiC,iBACjC,gCAAiC,iBACjC,8BAA+B,eAC/B,mCAAoC,oBACpC,8BAA+B,eAC/B,+BAAgC,gBAErCC,YACK,UAAW,QAEhBC,SACK,YAAa","file":"static/js/5.2dd56784.chunk.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ 1311:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\nvar conf={comments:{lineComment:'#'},brackets:[['{','}'],['[',']'],['(',')']],autoClosingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\"',close:'\"'},{open:'\\'',close:'\\''}],surroundingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\"',close:'\"'},{open:'\\'',close:'\\''}],folding:{offSide:true}};var language={tokenPostfix:'.yaml',brackets:[{token:'delimiter.bracket',open:'{',close:'}'},{token:'delimiter.square',open:'[',close:']'}],keywords:['true','True','TRUE','false','False','FALSE','null','Null','Null','~'],numberInteger:/(?:0|[+-]?[0-9]+)/,numberFloat:/(?:0|[+-]?[0-9]+)(?:\\.[0-9]+)?(?:e[-+][1-9][0-9]*)?/,numberOctal:/0o[0-7]+/,numberHex:/0x[0-9a-fA-F]+/,numberInfinity:/[+-]?\\.(?:inf|Inf|INF)/,numberNaN:/\\.(?:nan|Nan|NAN)/,numberDate:/\\d{4}-\\d\\d-\\d\\d([Tt ]\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(( ?[+-]\\d\\d?(:\\d\\d)?)|Z)?)?/,escapes:/\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,tokenizer:{root:[{include:'@whitespace'},{include:'@comment'},// Directive\n[/%[^ ]+.*$/,'meta.directive'],// Document Markers\n[/---/,'operators.directivesEnd'],[/\\.{3}/,'operators.documentEnd'],// Block Structure Indicators\n[/[-?:](?= )/,'operators'],{include:'@anchor'},{include:'@tagHandle'},{include:'@flowCollections'},{include:'@blockStyle'},// Numbers\n[/@numberInteger(?![ \\t]*\\S+)/,'number'],[/@numberFloat(?![ \\t]*\\S+)/,'number.float'],[/@numberOctal(?![ \\t]*\\S+)/,'number.octal'],[/@numberHex(?![ \\t]*\\S+)/,'number.hex'],[/@numberInfinity(?![ \\t]*\\S+)/,'number.infinity'],[/@numberNaN(?![ \\t]*\\S+)/,'number.nan'],[/@numberDate(?![ \\t]*\\S+)/,'number.date'],// Key:Value pair\n[/(\".*?\"|'.*?'|.*?)([ \\t]*)(:)( |$)/,['type','white','operators','white']],{include:'@flowScalars'},// String nodes\n[/.+$/,{cases:{'@keywords':'keyword','@default':'string'}}]],// Flow Collection: Flow Mapping\nobject:[{include:'@whitespace'},{include:'@comment'},// Flow Mapping termination\n[/\\}/,'@brackets','@pop'],// Flow Mapping delimiter\n[/,/,'delimiter.comma'],// Flow Mapping Key:Value delimiter\n[/:(?= )/,'operators'],// Flow Mapping Key:Value key\n[/(?:\".*?\"|'.*?'|[^,\\{\\[]+?)(?=: )/,'type'],// Start Flow Style\n{include:'@flowCollections'},{include:'@flowScalars'},// Scalar Data types\n{include:'@tagHandle'},{include:'@anchor'},{include:'@flowNumber'},// Other value (keyword or string)\n[/[^\\},]+/,{cases:{'@keywords':'keyword','@default':'string'}}]],// Flow Collection: Flow Sequence\narray:[{include:'@whitespace'},{include:'@comment'},// Flow Sequence termination\n[/\\]/,'@brackets','@pop'],// Flow Sequence delimiter\n[/,/,'delimiter.comma'],// Start Flow Style\n{include:'@flowCollections'},{include:'@flowScalars'},// Scalar Data types\n{include:'@tagHandle'},{include:'@anchor'},{include:'@flowNumber'},// Other value (keyword or string)\n[/[^\\],]+/,{cases:{'@keywords':'keyword','@default':'string'}}]],// First line of a Block Style\nmultiString:[[/^( +).+$/,'string','@multiStringContinued.$1']],// Further lines of a Block Style\n//   Workaround for indentation detection\nmultiStringContinued:[[/^( *).+$/,{cases:{'$1==$S2':'string','@default':{token:'@rematch',next:'@popall'}}}]],whitespace:[[/[ \\t\\r\\n]+/,'white']],// Only line comments\ncomment:[[/#.*$/,'comment']],// Start Flow Collections\nflowCollections:[[/\\[/,'@brackets','@array'],[/\\{/,'@brackets','@object']],// Start Flow Scalars (quoted strings)\nflowScalars:[[/\"([^\"\\\\]|\\\\.)*$/,'string.invalid'],[/'([^'\\\\]|\\\\.)*$/,'string.invalid'],[/'[^']*'/,'string'],[/\"/,'string','@doubleQuotedString']],doubleQuotedString:[[/[^\\\\\"]+/,'string'],[/@escapes/,'string.escape'],[/\\\\./,'string.escape.invalid'],[/\"/,'string','@pop']],// Start Block Scalar\nblockStyle:[[/[>|][0-9]*[+-]?$/,'operators','@multiString']],// Numbers in Flow Collections (terminate with ,]})\nflowNumber:[[/@numberInteger(?=[ \\t]*[,\\]\\}])/,'number'],[/@numberFloat(?=[ \\t]*[,\\]\\}])/,'number.float'],[/@numberOctal(?=[ \\t]*[,\\]\\}])/,'number.octal'],[/@numberHex(?=[ \\t]*[,\\]\\}])/,'number.hex'],[/@numberInfinity(?=[ \\t]*[,\\]\\}])/,'number.infinity'],[/@numberNaN(?=[ \\t]*[,\\]\\}])/,'number.nan'],[/@numberDate(?=[ \\t]*[,\\]\\}])/,'number.date']],tagHandle:[[/\\![^ ]*/,'tag']],anchor:[[/[&*][^ ]+/,'namespace']]}};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/5.2dd56784.chunk.js","export var conf = {\r\n    comments: {\r\n        lineComment: '#'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    folding: {\r\n        offSide: true\r\n    }\r\n};\r\nexport var language = {\r\n    tokenPostfix: '.yaml',\r\n    brackets: [\r\n        { token: 'delimiter.bracket', open: '{', close: '}' },\r\n        { token: 'delimiter.square', open: '[', close: ']' }\r\n    ],\r\n    keywords: ['true', 'True', 'TRUE', 'false', 'False', 'FALSE', 'null', 'Null', 'Null', '~'],\r\n    numberInteger: /(?:0|[+-]?[0-9]+)/,\r\n    numberFloat: /(?:0|[+-]?[0-9]+)(?:\\.[0-9]+)?(?:e[-+][1-9][0-9]*)?/,\r\n    numberOctal: /0o[0-7]+/,\r\n    numberHex: /0x[0-9a-fA-F]+/,\r\n    numberInfinity: /[+-]?\\.(?:inf|Inf|INF)/,\r\n    numberNaN: /\\.(?:nan|Nan|NAN)/,\r\n    numberDate: /\\d{4}-\\d\\d-\\d\\d([Tt ]\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(( ?[+-]\\d\\d?(:\\d\\d)?)|Z)?)?/,\r\n    escapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            { include: '@comment' },\r\n            // Directive\r\n            [/%[^ ]+.*$/, 'meta.directive'],\r\n            // Document Markers\r\n            [/---/, 'operators.directivesEnd'],\r\n            [/\\.{3}/, 'operators.documentEnd'],\r\n            // Block Structure Indicators\r\n            [/[-?:](?= )/, 'operators'],\r\n            { include: '@anchor' },\r\n            { include: '@tagHandle' },\r\n            { include: '@flowCollections' },\r\n            { include: '@blockStyle' },\r\n            // Numbers\r\n            [/@numberInteger(?![ \\t]*\\S+)/, 'number'],\r\n            [/@numberFloat(?![ \\t]*\\S+)/, 'number.float'],\r\n            [/@numberOctal(?![ \\t]*\\S+)/, 'number.octal'],\r\n            [/@numberHex(?![ \\t]*\\S+)/, 'number.hex'],\r\n            [/@numberInfinity(?![ \\t]*\\S+)/, 'number.infinity'],\r\n            [/@numberNaN(?![ \\t]*\\S+)/, 'number.nan'],\r\n            [/@numberDate(?![ \\t]*\\S+)/, 'number.date'],\r\n            // Key:Value pair\r\n            [/(\".*?\"|'.*?'|.*?)([ \\t]*)(:)( |$)/, ['type', 'white', 'operators', 'white']],\r\n            { include: '@flowScalars' },\r\n            // String nodes\r\n            [/.+$/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'string'\r\n                    }\r\n                }]\r\n        ],\r\n        // Flow Collection: Flow Mapping\r\n        object: [\r\n            { include: '@whitespace' },\r\n            { include: '@comment' },\r\n            // Flow Mapping termination\r\n            [/\\}/, '@brackets', '@pop'],\r\n            // Flow Mapping delimiter\r\n            [/,/, 'delimiter.comma'],\r\n            // Flow Mapping Key:Value delimiter\r\n            [/:(?= )/, 'operators'],\r\n            // Flow Mapping Key:Value key\r\n            [/(?:\".*?\"|'.*?'|[^,\\{\\[]+?)(?=: )/, 'type'],\r\n            // Start Flow Style\r\n            { include: '@flowCollections' },\r\n            { include: '@flowScalars' },\r\n            // Scalar Data types\r\n            { include: '@tagHandle' },\r\n            { include: '@anchor' },\r\n            { include: '@flowNumber' },\r\n            // Other value (keyword or string)\r\n            [/[^\\},]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'string'\r\n                    }\r\n                }]\r\n        ],\r\n        // Flow Collection: Flow Sequence\r\n        array: [\r\n            { include: '@whitespace' },\r\n            { include: '@comment' },\r\n            // Flow Sequence termination\r\n            [/\\]/, '@brackets', '@pop'],\r\n            // Flow Sequence delimiter\r\n            [/,/, 'delimiter.comma'],\r\n            // Start Flow Style\r\n            { include: '@flowCollections' },\r\n            { include: '@flowScalars' },\r\n            // Scalar Data types\r\n            { include: '@tagHandle' },\r\n            { include: '@anchor' },\r\n            { include: '@flowNumber' },\r\n            // Other value (keyword or string)\r\n            [/[^\\],]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'string'\r\n                    }\r\n                }]\r\n        ],\r\n        // First line of a Block Style\r\n        multiString: [\r\n            [/^( +).+$/, 'string', '@multiStringContinued.$1']\r\n        ],\r\n        // Further lines of a Block Style\r\n        //   Workaround for indentation detection\r\n        multiStringContinued: [\r\n            [/^( *).+$/, {\r\n                    cases: {\r\n                        '$1==$S2': 'string',\r\n                        '@default': { token: '@rematch', next: '@popall' }\r\n                    }\r\n                }]\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white']\r\n        ],\r\n        // Only line comments\r\n        comment: [\r\n            [/#.*$/, 'comment']\r\n        ],\r\n        // Start Flow Collections\r\n        flowCollections: [\r\n            [/\\[/, '@brackets', '@array'],\r\n            [/\\{/, '@brackets', '@object']\r\n        ],\r\n        // Start Flow Scalars (quoted strings)\r\n        flowScalars: [\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/'[^']*'/, 'string'],\r\n            [/\"/, 'string', '@doubleQuotedString']\r\n        ],\r\n        doubleQuotedString: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, 'string', '@pop']\r\n        ],\r\n        // Start Block Scalar\r\n        blockStyle: [\r\n            [/[>|][0-9]*[+-]?$/, 'operators', '@multiString']\r\n        ],\r\n        // Numbers in Flow Collections (terminate with ,]})\r\n        flowNumber: [\r\n            [/@numberInteger(?=[ \\t]*[,\\]\\}])/, 'number'],\r\n            [/@numberFloat(?=[ \\t]*[,\\]\\}])/, 'number.float'],\r\n            [/@numberOctal(?=[ \\t]*[,\\]\\}])/, 'number.octal'],\r\n            [/@numberHex(?=[ \\t]*[,\\]\\}])/, 'number.hex'],\r\n            [/@numberInfinity(?=[ \\t]*[,\\]\\}])/, 'number.infinity'],\r\n            [/@numberNaN(?=[ \\t]*[,\\]\\}])/, 'number.nan'],\r\n            [/@numberDate(?=[ \\t]*[,\\]\\}])/, 'number.date']\r\n        ],\r\n        tagHandle: [\r\n            [/\\![^ ]*/, 'tag']\r\n        ],\r\n        anchor: [\r\n            [/[&*][^ ]+/, 'namespace']\r\n        ]\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/yaml/yaml.js"],"sourceRoot":""}