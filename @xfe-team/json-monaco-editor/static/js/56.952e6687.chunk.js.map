{"version":3,"sources":["../static/js/56.952e6687.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/cameligo/cameligo.js"],"names":["webpackJsonp","1316","module","__webpack_exports__","__webpack_require__","conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","typeKeywords","operators","symbols","tokenizer","root","cases","include","comment","string","bracket","next","whitespace"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLA,2HAKO,IAAIC,IACPC,UACIC,YAAa,KACbC,cAAe,KAAM,OAEzBC,WACK,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MAEVC,mBACMC,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAMC,MAAO,MAEzBC,mBACMF,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAMC,MAAO,OAGlBE,GACPC,aAAc,GACdC,aAAc,YACdC,YAAY,EACZR,WACME,KAAM,IAAKC,MAAO,IAAKM,MAAO,oBAC9BP,KAAM,IAAKC,MAAO,IAAKM,MAAO,qBAC9BP,KAAM,IAAKC,MAAO,IAAKM,MAAO,0BAC9BP,KAAM,IAAKC,MAAO,IAAKM,MAAO,oBAEpCC,UACI,MAAO,QAAS,QAAS,SAAU,UAAW,OAAQ,MAAO,WAC7D,QAAS,MAAO,KAAM,KAAM,MAAO,YAAa,WAAY,OAAQ,OACpE,MAAO,MAAO,QAAS,YAAa,MAAO,MAAO,YAAa,YAAa,KAC5E,MAAO,MAAO,SAAU,SAAU,SAAU,OAAQ,OAAQ,OAAQ,QAExEC,cACI,MAAO,OAAQ,SAAU,MAE7BC,WACI,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,MAAO,MAAO,KAC1D,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,MAGlDC,QAAS,wBAETC,WACIC,OAEK,kBACOC,OACI,aAAeP,MAAO,cACtB,WAAY,iBAItBQ,QAAS,gBAEV,aAAc,cACd,mBAAoB,cACpB,YACOD,OACI,aAAc,YACd,WAAY,OAIvB,2BAA4B,iBAC5B,sBAAuB,eACvB,MAAO,WAEP,QAAS,cAET,kBAAmB,mBACnB,IAAK,SAAU,YAEf,WAAY,WACZ,IAAK,mBACL,QAAS,WAGdE,UACK,WAAY,YAEZ,OAAQ,UAAW,SACnB,OAAQ,YAEbC,SACK,UAAW,WACX,MAAO,0BACP,KAAOV,MAAO,eAAgBW,QAAS,SAAUC,KAAM,UAE5DC,aACK,aAAc,UACd,OAAQ,UAAW,aACnB,UAAW","file":"static/js/56.952e6687.chunk.js","sourcesContent":["webpackJsonp([56],{\n\n/***/ 1316:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/var conf={comments:{lineComment:'//',blockComment:['(*','*)']},brackets:[['{','}'],['[',']'],['(',')'],['<','>']],autoClosingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'<',close:'>'},{open:'\\'',close:'\\''}],surroundingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'<',close:'>'},{open:'\\'',close:'\\''}]};var language={defaultToken:'',tokenPostfix:'.cameligo',ignoreCase:true,brackets:[{open:'{',close:'}',token:'delimiter.curly'},{open:'[',close:']',token:'delimiter.square'},{open:'(',close:')',token:'delimiter.parenthesis'},{open:'<',close:'>',token:'delimiter.angle'}],keywords:['abs','begin','Bytes','Crypto','Current','else','end','failwith','false','fun','if','in','let','let%entry','let%init','List','list','Map','map','match','match%nat','mod','not','operation','Operation','of','Set','set','sender','source','String','then','true','type','with'],typeKeywords:['int','unit','string','tz'],operators:['=','>','<','<=','>=','<>',':',':=','and','mod','or','+','-','*','/','@','&','^','%','->','<-'],// we include these common regular expressions\nsymbols:/[=><:@\\^&|+\\-*\\/\\^%]+/,// The main tokenizer for our languages\ntokenizer:{root:[// identifiers and keywords\n[/[a-zA-Z_][\\w]*/,{cases:{'@keywords':{token:'keyword.$0'},'@default':'identifier'}}],// whitespace\n{include:'@whitespace'},// delimiters and operators\n[/[{}()\\[\\]]/,'@brackets'],[/[<>](?!@symbols)/,'@brackets'],[/@symbols/,{cases:{'@operators':'delimiter','@default':''}}],// numbers\n[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/,'number.float'],[/\\$[0-9a-fA-F]{1,16}/,'number.hex'],[/\\d+/,'number'],// delimiter: after number because of .\\d floats\n[/[;,.]/,'delimiter'],// strings\n[/'([^'\\\\]|\\\\.)*$/,'string.invalid'],[/'/,'string','@string'],// characters\n[/'[^\\\\']'/,'string'],[/'/,'string.invalid'],[/\\#\\d+/,'string']],/* */comment:[[/[^\\(\\*]+/,'comment'],//[/\\(\\*/,    'comment', '@push' ],    // nested comment  not allowed :-(\n[/\\*\\)/,'comment','@pop'],[/\\(\\*/,'comment']],string:[[/[^\\\\']+/,'string'],[/\\\\./,'string.escape.invalid'],[/'/,{token:'string.quote',bracket:'@close',next:'@pop'}]],whitespace:[[/[ \\t\\r\\n]+/,'white'],[/\\(\\*/,'comment','@comment'],[/\\/\\/.*$/,'comment']]}};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/56.952e6687.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['(*', '*)'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n        ['<', '>'],\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: '\\'', close: '\\'' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.cameligo',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    keywords: [\r\n        'abs', 'begin', 'Bytes', 'Crypto', 'Current', 'else', 'end', 'failwith',\r\n        'false', 'fun', 'if', 'in', 'let', 'let%entry', 'let%init', 'List', 'list',\r\n        'Map', 'map', 'match', 'match%nat', 'mod', 'not', 'operation', 'Operation', 'of',\r\n        'Set', 'set', 'sender', 'source', 'String', 'then', 'true', 'type', 'with',\r\n    ],\r\n    typeKeywords: [\r\n        'int', 'unit', 'string', 'tz',\r\n    ],\r\n    operators: [\r\n        '=', '>', '<', '<=', '>=', '<>', ':', ':=', 'and', 'mod', 'or',\r\n        '+', '-', '*', '/', '@', '&', '^', '%', '->', '<-'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><:@\\^&|+\\-*\\/\\^%]+/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_][\\w]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\$[0-9a-fA-F]{1,16}/, 'number.hex'],\r\n            [/\\d+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/'/, 'string', '@string'],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/'/, 'string.invalid'],\r\n            [/\\#\\d+/, 'string']\r\n        ],\r\n        /* */\r\n        comment: [\r\n            [/[^\\(\\*]+/, 'comment'],\r\n            //[/\\(\\*/,    'comment', '@push' ],    // nested comment  not allowed :-(\r\n            [/\\*\\)/, 'comment', '@pop'],\r\n            [/\\(\\*/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\']+/, 'string'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/\\(\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/cameligo/cameligo.js"],"sourceRoot":""}