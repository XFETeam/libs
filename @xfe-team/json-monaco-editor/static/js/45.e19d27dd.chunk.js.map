{"version":3,"sources":["../static/js/45.e19d27dd.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.js"],"names":["webpackJsonp","1336","module","__webpack_exports__","__webpack_require__","conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","keywords","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","root","cases","token","include","whitespace","comment","javadoc","string","multistring"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLA,2HAKO,IAAIC,IAEPC,YAAa,qFACbC,UACIC,YAAa,KACbC,cAAe,KAAM,OAEzBC,WACK,IAAK,MACL,IAAK,MACL,IAAK,MAEVC,mBACMC,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAMC,MAAO,MAEzBC,mBACMF,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAMC,MAAO,MACnBD,KAAM,IAAKC,MAAO,MAExBE,SACIC,SACIC,MAAO,GAAIC,QAAO,sDAClBC,IAAK,GAAID,QAAO,2DAIjBE,GACPC,aAAc,GACdC,aAAc,MACdC,UACI,KAAM,MAAO,QAAS,QAAS,WAAY,KAAM,OAAQ,QAAS,MAAO,MAAO,KAChF,KAAM,MAAO,YAAa,KAAM,MAAO,OAAQ,SAAU,UAAW,SAAU,QAC9E,OAAQ,QAAS,OAAQ,MAAO,YAAa,MAAO,MAAO,OAAQ,QAAS,KAC5E,QAAS,cAAe,WAAY,UAAW,QAAS,OAAQ,UAAW,MAC3E,SAAU,OAAQ,QAAS,WAAY,WAAY,MAAO,WAAY,QAAS,SAC/E,WAAY,aAAc,YAAa,QAAS,cAAe,OAAQ,OAAQ,SAC/E,WAAY,QAAS,QAAS,SAAU,QAAS,WAAY,WAAY,WACzE,OAAQ,WAAY,MAAO,WAAY,UAAW,YAAa,SAAU,UACzE,SAAU,UAAW,UAAW,SAAU,QAAS,MAEvDC,WACI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAChD,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,MAC/C,MAAO,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KACnD,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAG/CC,QAAS,wBACTC,QAAS,wEACTC,OAAQ,cACRC,YAAa,oBACbC,aAAc,oBACdC,UAAW,iCAEXC,WACIC,OAEK,eAAgB,oBAEhB,oBACOC,OACI,aAAeC,MAAO,cACtB,WAAY,iBAItBC,QAAS,gBAEV,aAAc,cACd,mBAAoB,cACpB,YACOF,OACI,aAAc,YACd,WAAY,OAIvB,yBAA0B,eAE1B,yCAA0C,iBAC1C,oDAAqD,iBACrD,yBAA0B,eAC1B,uBAAwB,iBACxB,4BAA6B,kBAC7B,kBAAmB,iBACnB,iBAAkB,WAElB,QAAS,cAET,kBAAmB,mBACnB,MAAO,SAAU,iBACjB,IAAK,SAAU,YAEf,WAAY,WACZ,oBAAqB,SAAU,gBAAiB,YAChD,IAAK,mBAEVG,aACK,aAAc,KACd,eAAgB,cAAe,aAC/B,OAAQ,UAAW,aACnB,UAAW,YAEhBC,UACK,UAAW,YACX,OAAQ,UAAW,aACnB,OAAQ,UAAW,SACnB,QAAS,YAGdC,UACK,UAAW,gBACX,OAAQ,cAAe,UACvB,OAAQ,wBACR,OAAQ,cAAe,SACvB,QAAS,gBAEdC,SACK,UAAW,WACX,WAAY,kBACZ,MAAO,0BACP,IAAK,SAAU,SAEpBC,cACK,UAAW,WACX,WAAY,kBACZ,MAAO,0BACP,MAAO,SAAU,SACjB,IAAK","file":"static/js/45.e19d27dd.chunk.js","sourcesContent":["webpackJsonp([45],{\n\n/***/ 1336:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/var conf={// the default separators except `@$`\nwordPattern:/(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,comments:{lineComment:'//',blockComment:['/*','*/']},brackets:[['{','}'],['[',']'],['(',')']],autoClosingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\"',close:'\"'},{open:'\\'',close:'\\''}],surroundingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\"',close:'\"'},{open:'\\'',close:'\\''},{open:'<',close:'>'}],folding:{markers:{start:new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),end:new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")}}};var language={defaultToken:'',tokenPostfix:'.kt',keywords:['as','as?','break','class','continue','do','else','false','for','fun','if','in','!in','interface','is','!is','null','object','package','return','super','this','throw','true','try','typealias','val','var','when','while','by','catch','constructor','delegate','dynamic','field','file','finally','get','import','init','param','property','receiver','set','setparam','where','actual','abstract','annotation','companion','const','crossinline','data','enum','expect','external','final','infix','inline','inner','internal','lateinit','noinline','open','operator','out','override','private','protected','public','reified','sealed','suspend','tailrec','vararg','field','it'],operators:['+','-','*','/','%','=','+=','-=','*=','/=','%=','++','--','&&','||','!','==','!=','===','!==','>','<','<=','>=','[',']','!!','?.','?:','::','..',':','?','->','@',';','$','_'],// we include these common regular expressions\nsymbols:/[=><!~?:&|+\\-*\\/\\^%]+/,escapes:/\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,digits:/\\d+(_+\\d+)*/,octaldigits:/[0-7]+(_+[0-7]+)*/,binarydigits:/[0-1]+(_+[0-1]+)*/,hexdigits:/[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,// The main tokenizer for our languages\ntokenizer:{root:[// class name highlighting\n[/[A-Z][\\w\\$]*/,'type.identifier'],// identifiers and keywords\n[/[a-zA-Z_$][\\w$]*/,{cases:{'@keywords':{token:'keyword.$0'},'@default':'identifier'}}],// whitespace\n{include:'@whitespace'},// delimiters and operators\n[/[{}()\\[\\]]/,'@brackets'],[/[<>](?!@symbols)/,'@brackets'],[/@symbols/,{cases:{'@operators':'delimiter','@default':''}}],// @ annotations.\n[/@\\s*[a-zA-Z_\\$][\\w\\$]*/,'annotation'],// numbers\n[/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/,'number.float'],[/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/,'number.float'],[/0[xX](@hexdigits)[Ll]?/,'number.hex'],[/0(@octaldigits)[Ll]?/,'number.octal'],[/0[bB](@binarydigits)[Ll]?/,'number.binary'],[/(@digits)[fFdD]/,'number.float'],[/(@digits)[lL]?/,'number'],// delimiter: after number because of .\\d floats\n[/[;,.]/,'delimiter'],// strings\n[/\"([^\"\\\\]|\\\\.)*$/,'string.invalid'],[/\"\"\"/,'string','@multistring'],[/\"/,'string','@string'],// characters\n[/'[^\\\\']'/,'string'],[/(')(@escapes)(')/,['string','string.escape','string']],[/'/,'string.invalid']],whitespace:[[/[ \\t\\r\\n]+/,''],[/\\/\\*\\*(?!\\/)/,'comment.doc','@javadoc'],[/\\/\\*/,'comment','@comment'],[/\\/\\/.*$/,'comment']],comment:[[/[^\\/*]+/,'comment'],[/\\/\\*/,'comment','@comment'],[/\\*\\//,'comment','@pop'],[/[\\/*]/,'comment']],//Identical copy of comment above, except for the addition of .doc\njavadoc:[[/[^\\/*]+/,'comment.doc'],[/\\/\\*/,'comment.doc','@push'],[/\\/\\*/,'comment.doc.invalid'],[/\\*\\//,'comment.doc','@pop'],[/[\\/*]/,'comment.doc']],string:[[/[^\\\\\"]+/,'string'],[/@escapes/,'string.escape'],[/\\\\./,'string.escape.invalid'],[/\"/,'string','@pop']],multistring:[[/[^\\\\\"]+/,'string'],[/@escapes/,'string.escape'],[/\\\\./,'string.escape.invalid'],[/\"\"\"/,'string','@pop'],[/./,'string']]}};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/45.e19d27dd.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    // the default separators except `@$`\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '<', close: '>' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n            end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.kt',\r\n    keywords: [\r\n        'as', 'as?', 'break', 'class', 'continue', 'do', 'else', 'false', 'for', 'fun', 'if',\r\n        'in', '!in', 'interface', 'is', '!is', 'null', 'object', 'package', 'return', 'super',\r\n        'this', 'throw', 'true', 'try', 'typealias', 'val', 'var', 'when', 'while', 'by',\r\n        'catch', 'constructor', 'delegate', 'dynamic', 'field', 'file', 'finally', 'get',\r\n        'import', 'init', 'param', 'property', 'receiver', 'set', 'setparam', 'where', 'actual',\r\n        'abstract', 'annotation', 'companion', 'const', 'crossinline', 'data', 'enum', 'expect',\r\n        'external', 'final', 'infix', 'inline', 'inner', 'internal', 'lateinit', 'noinline',\r\n        'open', 'operator', 'out', 'override', 'private', 'protected', 'public', 'reified',\r\n        'sealed', 'suspend', 'tailrec', 'vararg', 'field', 'it'\r\n    ],\r\n    operators: [\r\n        '+', '-', '*', '/', '%', '=', '+=', '-=', '*=', '/=',\r\n        '%=', '++', '--', '&&', '||', '!', '==', '!=', '===',\r\n        '!==', '>', '<', '<=', '>=', '[', ']', '!!', '?.', '?:',\r\n        '::', '..', ':', '?', '->', '@', ';', '$', '_'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    digits: /\\d+(_+\\d+)*/,\r\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // class name highlighting\r\n            [/[A-Z][\\w\\$]*/, 'type.identifier'],\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_$][\\w$]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // @ annotations.\r\n            [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n            // numbers\r\n            [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n            [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n            [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n            [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n            [/(@digits)[fFdD]/, 'number.float'],\r\n            [/(@digits)[lL]?/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"\"\"/, 'string', '@multistring'],\r\n            [/\"/, 'string', '@string'],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        //Identical copy of comment above, except for the addition of .doc\r\n        javadoc: [\r\n            [/[^\\/*]+/, 'comment.doc'],\r\n            [/\\/\\*/, 'comment.doc', '@push'],\r\n            [/\\/\\*/, 'comment.doc.invalid'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/[\\/*]/, 'comment.doc']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, 'string', '@pop']\r\n        ],\r\n        multistring: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"\"\"/, 'string', '@pop'],\r\n            [/./, 'string']\r\n        ],\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.js"],"sourceRoot":""}