{"version":3,"sources":["../static/js/30.bd0031ab.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js"],"names":["webpackJsonp","1351","module","__webpack_exports__","__webpack_require__","conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","helpKeywords","symbols","escapes","tokenizer","root","cases","next","string","herestring","comment"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLA,2HAKO,IAAIC,IAEPC,YAAa,oFACbC,UACIC,YAAa,IACbC,cAAe,KAAM,OAEzBC,WACK,IAAK,MACL,IAAK,MACL,IAAK,MAEVC,mBACMC,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,IAAKC,OAAQ,YAC/BF,KAAM,IAAMC,MAAO,IAAMC,OAAQ,SAAU,aAEjDC,mBACMH,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAMC,MAAO,MAEzBG,SACIC,SACIC,MAAO,GAAIC,QAAO,mBAClBC,IAAK,GAAID,QAAO,yBAIjBE,GACPC,aAAc,GACdC,YAAY,EACZC,aAAc,OACdd,WACMe,MAAO,kBAAmBb,KAAM,IAAKC,MAAO,MAC5CY,MAAO,mBAAoBb,KAAM,IAAKC,MAAO,MAC7CY,MAAO,wBAAyBb,KAAM,IAAKC,MAAO,MAExDa,UACI,QAAS,QAAS,QAAS,QAAS,WAAY,OAChD,SAAU,KAAM,eAAgB,OAAQ,SAAU,MAClD,OAAQ,SAAU,UAAW,MAAO,UAAW,OAC/C,WAAY,KAAM,KAAM,QAAS,UAAW,SAC5C,SAAU,QAAS,OAAQ,MAAO,QAAS,QAC3C,MAAO,QAAS,WAAY,WAAY,WAAY,eAAgB,iBAExEC,aAAc,0KAEdC,QAAS,2BACTC,QAAS,wEAETC,WACIC,OAEK,mBACOC,OACI,aAAeP,MAAO,cACtB,WAAY,OAIvB,aAAc,KAEd,QAAS,YAET,oGAAqG,aAErG,KAAM,UAAW,aACjB,OAAQ,YAER,aAAc,cACd,WAAY,cAEZ,2BAA4B,iBAC5B,gCAAiC,eACjC,OAAQ,WAER,QAAS,cAET,MAAO,SAAU,kBACjB,MAAO,SAAU,kBACjB,KACOO,OACI,OAAQ,SACR,YAAcP,MAAO,SAAUQ,KAAM,iBAGhD,KACOD,OACI,OAAQ,SACR,YAAcP,MAAO,SAAUQ,KAAM,iBAIrDC,SACK,aACOF,OACI,QAAUP,MAAO,SAAUQ,KAAM,WACjC,WAAY,aAGvB,YACOD,OACI,QAAUP,MAAO,gBAAiBQ,KAAM,WACxC,WAAY,oBAGvB,MACOD,OACI,QAAUP,MAAO,wBAAyBQ,KAAM,WAChD,WAAY,4BAGvB,YACOD,OACI,UAAYP,MAAO,WAAYQ,KAAM,WACrC,YAAcR,MAAO,SAAUQ,KAAM,eAGhD,WACOD,OACI,SAAU,WACV,WAAY,aAGvB,QACOA,OACI,WAAaP,MAAO,SAAUQ,KAAM,QACpC,YACID,OACI,QAAUP,MAAO,SAAUQ,KAAM,WACjC,WAAY,eAMpCE,aACK,eACOH,OACI,WAAaP,MAAO,SAAUQ,KAAM,QACpC,WAAY,aAGvB,UAAW,WACX,WAAY,kBACZ,KAAM,0BACN,WACOD,OACI,SAAU,WACV,WAAY,aAI5BI,UACK,UAAW,YACX,KAAM,UAAW,SACjB,6BAA+BX,MAAO,wBACtC,QAAS","file":"static/js/30.bd0031ab.chunk.js","sourcesContent":["webpackJsonp([30],{\n\n/***/ 1351:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/var conf={// the default separators except `$-`\nwordPattern:/(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,comments:{lineComment:'#',blockComment:['<#','#>']},brackets:[['{','}'],['[',']'],['(',')']],autoClosingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\"',close:'\"',notIn:['string']},{open:'\\'',close:'\\'',notIn:['string','comment']}],surroundingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\"',close:'\"'},{open:'\\'',close:'\\''}],folding:{markers:{start:new RegExp(\"^\\\\s*#region\\\\b\"),end:new RegExp(\"^\\\\s*#endregion\\\\b\")}}};var language={defaultToken:'',ignoreCase:true,tokenPostfix:'.ps1',brackets:[{token:'delimiter.curly',open:'{',close:'}'},{token:'delimiter.square',open:'[',close:']'},{token:'delimiter.parenthesis',open:'(',close:')'}],keywords:['begin','break','catch','class','continue','data','define','do','dynamicparam','else','elseif','end','exit','filter','finally','for','foreach','from','function','if','in','param','process','return','switch','throw','trap','try','until','using','var','while','workflow','parallel','sequence','inlinescript','configuration'],helpKeywords:/SYNOPSIS|DESCRIPTION|PARAMETER|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|ROLE|FUNCTIONALITY|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP/,// we include these common regular expressions\nsymbols:/[=><!~?&%|+\\-*\\/\\^;\\.,]+/,escapes:/`(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,// The main tokenizer for our languages\ntokenizer:{root:[// commands and keywords\n[/[a-zA-Z_][\\w-]*/,{cases:{'@keywords':{token:'keyword.$0'},'@default':''}}],// whitespace\n[/[ \\t\\r\\n]+/,''],// labels\n[/^:\\w*/,'metatag'],// variables\n[/\\$(\\{((global|local|private|script|using):)?[\\w]+\\}|((global|local|private|script|using):)?[\\w]+)/,'variable'],// Comments\n[/<#/,'comment','@comment'],[/#.*$/,'comment'],// delimiters\n[/[{}()\\[\\]]/,'@brackets'],[/@symbols/,'delimiter'],// numbers\n[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/,'number.float'],[/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/,'number.hex'],[/\\d+?/,'number'],// delimiter: after number because of .\\d floats\n[/[;,.]/,'delimiter'],// strings:\n[/\\@\"/,'string','@herestring.\"'],[/\\@'/,'string','@herestring.\\''],[/\"/,{cases:{'@eos':'string','@default':{token:'string',next:'@string.\"'}}}],[/'/,{cases:{'@eos':'string','@default':{token:'string',next:'@string.\\''}}}]],string:[[/[^\"'\\$`]+/,{cases:{'@eos':{token:'string',next:'@popall'},'@default':'string'}}],[/@escapes/,{cases:{'@eos':{token:'string.escape',next:'@popall'},'@default':'string.escape'}}],[/`./,{cases:{'@eos':{token:'string.escape.invalid',next:'@popall'},'@default':'string.escape.invalid'}}],[/\\$[\\w]+$/,{cases:{'$S2==\"':{token:'variable',next:'@popall'},'@default':{token:'string',next:'@popall'}}}],[/\\$[\\w]+/,{cases:{'$S2==\"':'variable','@default':'string'}}],[/[\"']/,{cases:{'$#==$S2':{token:'string',next:'@pop'},'@default':{cases:{'@eos':{token:'string',next:'@popall'},'@default':'string'}}}}]],herestring:[[/^\\s*([\"'])@/,{cases:{'$1==$S2':{token:'string',next:'@pop'},'@default':'string'}}],[/[^\\$`]+/,'string'],[/@escapes/,'string.escape'],[/`./,'string.escape.invalid'],[/\\$[\\w]+/,{cases:{'$S2==\"':'variable','@default':'string'}}]],comment:[[/[^#\\.]+/,'comment'],[/#>/,'comment','@pop'],[/(\\.)(@helpKeywords)(?!\\w)/,{token:'comment.keyword.$2'}],[/[\\.#]/,'comment']]}};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/30.bd0031ab.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    // the default separators except `$-`\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '#',\r\n        blockComment: ['<#', '#>'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.ps1',\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.square', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\r\n    ],\r\n    keywords: [\r\n        'begin', 'break', 'catch', 'class', 'continue', 'data',\r\n        'define', 'do', 'dynamicparam', 'else', 'elseif', 'end',\r\n        'exit', 'filter', 'finally', 'for', 'foreach', 'from',\r\n        'function', 'if', 'in', 'param', 'process', 'return',\r\n        'switch', 'throw', 'trap', 'try', 'until', 'using',\r\n        'var', 'while', 'workflow', 'parallel', 'sequence', 'inlinescript', 'configuration'\r\n    ],\r\n    helpKeywords: /SYNOPSIS|DESCRIPTION|PARAMETER|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|ROLE|FUNCTIONALITY|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP/,\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?&%|+\\-*\\/\\^;\\.,]+/,\r\n    escapes: /`(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // commands and keywords\r\n            [/[a-zA-Z_][\\w-]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            // labels\r\n            [/^:\\w*/, 'metatag'],\r\n            // variables\r\n            [/\\$(\\{((global|local|private|script|using):)?[\\w]+\\}|((global|local|private|script|using):)?[\\w]+)/, 'variable'],\r\n            // Comments\r\n            [/<#/, 'comment', '@comment'],\r\n            [/#.*$/, 'comment'],\r\n            // delimiters\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\r\n            [/\\d+?/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings:\r\n            [/\\@\"/, 'string', '@herestring.\"'],\r\n            [/\\@'/, 'string', '@herestring.\\''],\r\n            [/\"/, {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\"' }\r\n                    }\r\n                }],\r\n            [/'/, {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\\'' }\r\n                    }\r\n                }],\r\n        ],\r\n        string: [\r\n            [/[^\"'\\$`]+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/@escapes/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape', next: '@popall' },\r\n                        '@default': 'string.escape'\r\n                    }\r\n                }],\r\n            [/`./, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\r\n                        '@default': 'string.escape.invalid'\r\n                    }\r\n                }],\r\n            [/\\$[\\w]+$/, {\r\n                    cases: {\r\n                        '$S2==\"': { token: 'variable', next: '@popall' },\r\n                        '@default': { token: 'string', next: '@popall' }\r\n                    }\r\n                }],\r\n            [/\\$[\\w]+/, {\r\n                    cases: {\r\n                        '$S2==\"': 'variable',\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': {\r\n                            cases: {\r\n                                '@eos': { token: 'string', next: '@popall' },\r\n                                '@default': 'string'\r\n                            }\r\n                        }\r\n                    }\r\n                }],\r\n        ],\r\n        herestring: [\r\n            [/^\\s*([\"'])@/, {\r\n                    cases: {\r\n                        '$1==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/[^\\$`]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/`./, 'string.escape.invalid'],\r\n            [/\\$[\\w]+/, {\r\n                    cases: {\r\n                        '$S2==\"': 'variable',\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n        ],\r\n        comment: [\r\n            [/[^#\\.]+/, 'comment'],\r\n            [/#>/, 'comment', '@pop'],\r\n            [/(\\.)(@helpKeywords)(?!\\w)/, { token: 'comment.keyword.$2' }],\r\n            [/[\\.#]/, 'comment']\r\n        ],\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js"],"sourceRoot":""}