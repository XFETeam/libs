{"version":3,"sources":["../static/js/41.17d43bcb.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.js"],"names":["webpackJsonp","1340","module","__webpack_exports__","__webpack_require__","conf","wordPattern","comments","blockComment","lineComment","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","regEx","keywords","symbols","escapes","tokenizer","root","cases","token","next","string","herestring","comment","hereregexp"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLA,2HAKO,IAAIC,IACPC,YAAa,wFACbC,UACIC,cAAe,MAAO,OACtBC,YAAa,KAEjBC,SACIC,SACIC,MAAO,GAAIC,QAAO,mBAClBC,IAAK,GAAID,QAAO,yBAIjBE,GACPC,aAAc,GACdC,YAAY,EACZC,aAAc,QACdC,MAAO,qCACPC,UACI,QAAS,QAAS,UAAW,OAC7B,MAAO,OAAQ,OAAQ,QAAS,MAAO,OACvC,MAAO,OAAQ,OAAQ,QAAS,MAAO,KAAM,MAC7C,MAAO,MAAO,MAAO,OAAQ,MAAO,OACpC,MAAO,OAAQ,MAAO,OAAQ,MAAO,MACrC,MAAO,MAAO,MAAO,OAAQ,OAAQ,QACrC,MAAO,OAAQ,OAAQ,MAAO,IAAK,MAAO,OAAQ,KAClD,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,KACtC,KAAM,KAAM,KAAM,OAAQ,OAAQ,OAAQ,OAAQ,QAGtDC,QAAS,WACTC,QAAS,yEAETC,WACIC,OAEK,iBAAkB,wBAClB,iBACOC,OACI,KAAQ,sBACR,aAAeC,MAAO,cACtB,WAAY,OAIvB,aAAc,KAEd,OAAQ,YAER,OAASA,MAAO,SAAUC,KAAM,iBAChC,kBAAmB,GAAI,YACvB,qBAAsB,YAAa,GAAI,YACvC,qBAAsB,YAAa,GAAI,YAEvC,WAAY,cAEZ,sBAAuB,iBACvB,2BAA4B,iBAC5B,oBAAqB,eACrB,gBAAiB,iBACjB,MAAO,WAEP,OAAQ,cAER,MAAO,SAAU,oBACjB,MAAO,SAAU,oBACjB,KACOF,OACI,OAAQ,SACR,YAAcC,MAAO,SAAUC,KAAM,iBAGhD,KACOF,OACI,OAAQ,SACR,YAAcC,MAAO,SAAUC,KAAM,iBAIrDC,SACK,aAAc,WACd,WAAY,kBACZ,KAAM,0BACN,KAAM,0BACN,MACOH,OACI,UAAYC,MAAO,SAAUC,KAAM,2BACnC,WAAY,aAGvB,QACOF,OACI,WAAaC,MAAO,SAAUC,KAAM,QACpC,WAAY,aAGvB,IAAK,WAEVE,aACK,aACOJ,OACI,WAAaC,MAAO,SAAUC,KAAM,QACpC,WAAY,aAGvB,YAAa,WACb,QAAS,WACT,WAAY,kBACZ,KAAM,0BACN,MAAQD,MAAO,eAAgBC,KAAM,6BACrC,IAAK,WAEVG,UACK,QAAS,YACT,IAAK,YAEVC,aACK,YAAa,WACb,MAAO,WACP,OAAQ,YACR,aAAeL,MAAO,SAAUC,KAAM,UACtC,KAAM","file":"static/js/41.17d43bcb.chunk.js","sourcesContent":["webpackJsonp([41],{\n\n/***/ 1340:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/var conf={wordPattern:/(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,comments:{blockComment:['###','###'],lineComment:'#'},folding:{markers:{start:new RegExp(\"^\\\\s*#region\\\\b\"),end:new RegExp(\"^\\\\s*#endregion\\\\b\")}}};var language={defaultToken:'',ignoreCase:false,tokenPostfix:'.mips',regEx:/\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,keywords:['.data','.text','syscall','trap','add','addu','addi','addiu','and','andi','div','divu','mult','multu','nor','or','ori','sll','slv','sra','srav','srl','srlv','sub','subu','xor','xori','lhi','lho','lhi','llo','slt','slti','sltu','sltiu','beq','bgtz','blez','bne','j','jal','jalr','jr','lb','lbu','lh','lhu','lw','li','la','sb','sh','sw','mfhi','mflo','mthi','mtlo','move'],// we include these common regular expressions\nsymbols:/[\\.,\\:]+/,escapes:/\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,// The main tokenizer for our languages\ntokenizer:{root:[// identifiers and keywords\n[/\\$[a-zA-Z_]\\w*/,'variable.predefined'],[/[.a-zA-Z_]\\w*/,{cases:{'this':'variable.predefined','@keywords':{token:'keyword.$0'},'@default':''}}],// whitespace\n[/[ \\t\\r\\n]+/,''],// Comments\n[/#.*$/,'comment'],// regular expressions\n['///',{token:'regexp',next:'@hereregexp'}],[/^(\\s*)(@regEx)/,['','regexp']],[/(\\,)(\\s*)(@regEx)/,['delimiter','','regexp']],[/(\\:)(\\s*)(@regEx)/,['delimiter','','regexp']],// delimiters\n[/@symbols/,'delimiter'],// numbers\n[/\\d+[eE]([\\-+]?\\d+)?/,'number.float'],[/\\d+\\.\\d+([eE][\\-+]?\\d+)?/,'number.float'],[/0[xX][0-9a-fA-F]+/,'number.hex'],[/0[0-7]+(?!\\d)/,'number.octal'],[/\\d+/,'number'],// delimiter: after number because of .\\d floats\n[/[,.]/,'delimiter'],// strings:\n[/\"\"\"/,'string','@herestring.\"\"\"'],[/'''/,'string','@herestring.\\'\\'\\''],[/\"/,{cases:{'@eos':'string','@default':{token:'string',next:'@string.\"'}}}],[/'/,{cases:{'@eos':'string','@default':{token:'string',next:'@string.\\''}}}]],string:[[/[^\"'\\#\\\\]+/,'string'],[/@escapes/,'string.escape'],[/\\./,'string.escape.invalid'],[/\\./,'string.escape.invalid'],[/#{/,{cases:{'$S2==\"':{token:'string',next:'root.interpolatedstring'},'@default':'string'}}],[/[\"']/,{cases:{'$#==$S2':{token:'string',next:'@pop'},'@default':'string'}}],[/#/,'string']],herestring:[[/(\"\"\"|''')/,{cases:{'$1==$S2':{token:'string',next:'@pop'},'@default':'string'}}],[/[^#\\\\'\"]+/,'string'],[/['\"]+/,'string'],[/@escapes/,'string.escape'],[/\\./,'string.escape.invalid'],[/#{/,{token:'string.quote',next:'root.interpolatedstring'}],[/#/,'string']],comment:[[/[^#]+/,'comment'],[/#/,'comment']],hereregexp:[[/[^\\\\\\/#]+/,'regexp'],[/\\\\./,'regexp'],[/#.*$/,'comment'],['///[igm]*',{token:'regexp',next:'@pop'}],[/\\//,'regexp']]}};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/41.17d43bcb.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        blockComment: ['###', '###'],\r\n        lineComment: '#'\r\n    },\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: false,\r\n    tokenPostfix: '.mips',\r\n    regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\r\n    keywords: [\r\n        '.data', '.text', 'syscall', 'trap',\r\n        'add', 'addu', 'addi', 'addiu', 'and', 'andi',\r\n        'div', 'divu', 'mult', 'multu', 'nor', 'or', 'ori',\r\n        'sll', 'slv', 'sra', 'srav', 'srl', 'srlv',\r\n        'sub', 'subu', 'xor', 'xori', 'lhi', 'lho',\r\n        'lhi', 'llo', 'slt', 'slti', 'sltu', 'sltiu',\r\n        'beq', 'bgtz', 'blez', 'bne', 'j', 'jal', 'jalr', 'jr',\r\n        'lb', 'lbu', 'lh', 'lhu', 'lw', 'li', 'la',\r\n        'sb', 'sh', 'sw', 'mfhi', 'mflo', 'mthi', 'mtlo', 'move',\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[\\.,\\:]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/\\$[a-zA-Z_]\\w*/, 'variable.predefined'],\r\n            [/[.a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        'this': 'variable.predefined',\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            // Comments\r\n            [/#.*$/, 'comment'],\r\n            // regular expressions\r\n            ['///', { token: 'regexp', next: '@hereregexp' }],\r\n            [/^(\\s*)(@regEx)/, ['', 'regexp']],\r\n            [/(\\,)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\:)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            // delimiters\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\r\n            [/0[0-7]+(?!\\d)/, 'number.octal'],\r\n            [/\\d+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[,.]/, 'delimiter'],\r\n            // strings:\r\n            [/\"\"\"/, 'string', '@herestring.\"\"\"'],\r\n            [/'''/, 'string', '@herestring.\\'\\'\\''],\r\n            [/\"/, {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\"' }\r\n                    }\r\n                }],\r\n            [/'/, {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\\'' }\r\n                    }\r\n                }],\r\n        ],\r\n        string: [\r\n            [/[^\"'\\#\\\\]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/#{/, {\r\n                    cases: {\r\n                        '$S2==\"': { token: 'string', next: 'root.interpolatedstring' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/#/, 'string']\r\n        ],\r\n        herestring: [\r\n            [/(\"\"\"|''')/, {\r\n                    cases: {\r\n                        '$1==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/[^#\\\\'\"]+/, 'string'],\r\n            [/['\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/#{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\r\n            [/#/, 'string']\r\n        ],\r\n        comment: [\r\n            [/[^#]+/, 'comment',],\r\n            [/#/, 'comment'],\r\n        ],\r\n        hereregexp: [\r\n            [/[^\\\\\\/#]+/, 'regexp'],\r\n            [/\\\\./, 'regexp'],\r\n            [/#.*$/, 'comment'],\r\n            ['///[igm]*', { token: 'regexp', next: '@pop' }],\r\n            [/\\//, 'regexp'],\r\n        ],\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.js"],"sourceRoot":""}