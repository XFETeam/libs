{"version":3,"sources":["../static/js/30.dcdd857d.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/php/php.js"],"names":["webpackJsonp","1345","module","__webpack_exports__","__webpack_require__","conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","tokenizer","root","token","switchTo","next","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded","phpInSimpleState","include","phpInEmbeddedState","phpRoot","cases","phpComment","phpLineComment","phpDoubleQuoteString","phpSingleQuoteString","phpKeywords","phpCompileTimeConstants","phpPreDefinedVariables","escapes"],"mappings":"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","file":"static/js/30.dcdd857d.chunk.js","sourcesContent":["webpackJsonp([30],{\n\n/***/ 1345:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/var conf={wordPattern:/(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,comments:{lineComment:'//',blockComment:['/*','*/']},brackets:[['{','}'],['[',']'],['(',')']],autoClosingPairs:[{open:'{',close:'}',notIn:['string']},{open:'[',close:']',notIn:['string']},{open:'(',close:')',notIn:['string']},{open:'\"',close:'\"',notIn:['string']},{open:'\\'',close:'\\'',notIn:['string','comment']}],folding:{markers:{start:new RegExp(\"^\\\\s*(#|\\/\\/)region\\\\b\"),end:new RegExp(\"^\\\\s*(#|\\/\\/)endregion\\\\b\")}}};var language={defaultToken:'',tokenPostfix:'',// ignoreCase: true,\n// The main tokenizer for our languages\ntokenizer:{root:[[/<\\?((php)|=)?/,{token:'@rematch',switchTo:'@phpInSimpleState.root'}],[/<!DOCTYPE/,'metatag.html','@doctype'],[/<!--/,'comment.html','@comment'],[/(<)(\\w+)(\\/>)/,['delimiter.html','tag.html','delimiter.html']],[/(<)(script)/,['delimiter.html',{token:'tag.html',next:'@script'}]],[/(<)(style)/,['delimiter.html',{token:'tag.html',next:'@style'}]],[/(<)([:\\w]+)/,['delimiter.html',{token:'tag.html',next:'@otherTag'}]],[/(<\\/)(\\w+)/,['delimiter.html',{token:'tag.html',next:'@otherTag'}]],[/</,'delimiter.html'],[/[^<]+/]// text\n],doctype:[[/<\\?((php)|=)?/,{token:'@rematch',switchTo:'@phpInSimpleState.comment'}],[/[^>]+/,'metatag.content.html'],[/>/,'metatag.html','@pop']],comment:[[/<\\?((php)|=)?/,{token:'@rematch',switchTo:'@phpInSimpleState.comment'}],[/-->/,'comment.html','@pop'],[/[^-]+/,'comment.content.html'],[/./,'comment.content.html']],otherTag:[[/<\\?((php)|=)?/,{token:'@rematch',switchTo:'@phpInSimpleState.otherTag'}],[/\\/?>/,'delimiter.html','@pop'],[/\"([^\"]*)\"/,'attribute.value'],[/'([^']*)'/,'attribute.value'],[/[\\w\\-]+/,'attribute.name'],[/=/,'delimiter'],[/[ \\t\\r\\n]+/]],// -- BEGIN <script> tags handling\n// After <script\nscript:[[/<\\?((php)|=)?/,{token:'@rematch',switchTo:'@phpInSimpleState.script'}],[/type/,'attribute.name','@scriptAfterType'],[/\"([^\"]*)\"/,'attribute.value'],[/'([^']*)'/,'attribute.value'],[/[\\w\\-]+/,'attribute.name'],[/=/,'delimiter'],[/>/,{token:'delimiter.html',next:'@scriptEmbedded.text/javascript',nextEmbedded:'text/javascript'}],[/[ \\t\\r\\n]+/],[/(<\\/)(script\\s*)(>)/,['delimiter.html','tag.html',{token:'delimiter.html',next:'@pop'}]]],// After <script ... type\nscriptAfterType:[[/<\\?((php)|=)?/,{token:'@rematch',switchTo:'@phpInSimpleState.scriptAfterType'}],[/=/,'delimiter','@scriptAfterTypeEquals'],[/>/,{token:'delimiter.html',next:'@scriptEmbedded.text/javascript',nextEmbedded:'text/javascript'}],[/[ \\t\\r\\n]+/],[/<\\/script\\s*>/,{token:'@rematch',next:'@pop'}]],// After <script ... type =\nscriptAfterTypeEquals:[[/<\\?((php)|=)?/,{token:'@rematch',switchTo:'@phpInSimpleState.scriptAfterTypeEquals'}],[/\"([^\"]*)\"/,{token:'attribute.value',switchTo:'@scriptWithCustomType.$1'}],[/'([^']*)'/,{token:'attribute.value',switchTo:'@scriptWithCustomType.$1'}],[/>/,{token:'delimiter.html',next:'@scriptEmbedded.text/javascript',nextEmbedded:'text/javascript'}],[/[ \\t\\r\\n]+/],[/<\\/script\\s*>/,{token:'@rematch',next:'@pop'}]],// After <script ... type = $S2\nscriptWithCustomType:[[/<\\?((php)|=)?/,{token:'@rematch',switchTo:'@phpInSimpleState.scriptWithCustomType.$S2'}],[/>/,{token:'delimiter.html',next:'@scriptEmbedded.$S2',nextEmbedded:'$S2'}],[/\"([^\"]*)\"/,'attribute.value'],[/'([^']*)'/,'attribute.value'],[/[\\w\\-]+/,'attribute.name'],[/=/,'delimiter'],[/[ \\t\\r\\n]+/],[/<\\/script\\s*>/,{token:'@rematch',next:'@pop'}]],scriptEmbedded:[[/<\\?((php)|=)?/,{token:'@rematch',switchTo:'@phpInEmbeddedState.scriptEmbedded.$S2',nextEmbedded:'@pop'}],[/<\\/script/,{token:'@rematch',next:'@pop',nextEmbedded:'@pop'}]],// -- END <script> tags handling\n// -- BEGIN <style> tags handling\n// After <style\nstyle:[[/<\\?((php)|=)?/,{token:'@rematch',switchTo:'@phpInSimpleState.style'}],[/type/,'attribute.name','@styleAfterType'],[/\"([^\"]*)\"/,'attribute.value'],[/'([^']*)'/,'attribute.value'],[/[\\w\\-]+/,'attribute.name'],[/=/,'delimiter'],[/>/,{token:'delimiter.html',next:'@styleEmbedded.text/css',nextEmbedded:'text/css'}],[/[ \\t\\r\\n]+/],[/(<\\/)(style\\s*)(>)/,['delimiter.html','tag.html',{token:'delimiter.html',next:'@pop'}]]],// After <style ... type\nstyleAfterType:[[/<\\?((php)|=)?/,{token:'@rematch',switchTo:'@phpInSimpleState.styleAfterType'}],[/=/,'delimiter','@styleAfterTypeEquals'],[/>/,{token:'delimiter.html',next:'@styleEmbedded.text/css',nextEmbedded:'text/css'}],[/[ \\t\\r\\n]+/],[/<\\/style\\s*>/,{token:'@rematch',next:'@pop'}]],// After <style ... type =\nstyleAfterTypeEquals:[[/<\\?((php)|=)?/,{token:'@rematch',switchTo:'@phpInSimpleState.styleAfterTypeEquals'}],[/\"([^\"]*)\"/,{token:'attribute.value',switchTo:'@styleWithCustomType.$1'}],[/'([^']*)'/,{token:'attribute.value',switchTo:'@styleWithCustomType.$1'}],[/>/,{token:'delimiter.html',next:'@styleEmbedded.text/css',nextEmbedded:'text/css'}],[/[ \\t\\r\\n]+/],[/<\\/style\\s*>/,{token:'@rematch',next:'@pop'}]],// After <style ... type = $S2\nstyleWithCustomType:[[/<\\?((php)|=)?/,{token:'@rematch',switchTo:'@phpInSimpleState.styleWithCustomType.$S2'}],[/>/,{token:'delimiter.html',next:'@styleEmbedded.$S2',nextEmbedded:'$S2'}],[/\"([^\"]*)\"/,'attribute.value'],[/'([^']*)'/,'attribute.value'],[/[\\w\\-]+/,'attribute.name'],[/=/,'delimiter'],[/[ \\t\\r\\n]+/],[/<\\/style\\s*>/,{token:'@rematch',next:'@pop'}]],styleEmbedded:[[/<\\?((php)|=)?/,{token:'@rematch',switchTo:'@phpInEmbeddedState.styleEmbedded.$S2',nextEmbedded:'@pop'}],[/<\\/style/,{token:'@rematch',next:'@pop',nextEmbedded:'@pop'}]],// -- END <style> tags handling\nphpInSimpleState:[[/<\\?((php)|=)?/,'metatag.php'],[/\\?>/,{token:'metatag.php',switchTo:'@$S2.$S3'}],{include:'phpRoot'}],phpInEmbeddedState:[[/<\\?((php)|=)?/,'metatag.php'],[/\\?>/,{token:'metatag.php',switchTo:'@$S2.$S3',nextEmbedded:'$S3'}],{include:'phpRoot'}],phpRoot:[[/[a-zA-Z_]\\w*/,{cases:{'@phpKeywords':{token:'keyword.php'},'@phpCompileTimeConstants':{token:'constant.php'},'@default':'identifier.php'}}],[/[$a-zA-Z_]\\w*/,{cases:{'@phpPreDefinedVariables':{token:'variable.predefined.php'},'@default':'variable.php'}}],// brackets\n[/[{}]/,'delimiter.bracket.php'],[/[\\[\\]]/,'delimiter.array.php'],[/[()]/,'delimiter.parenthesis.php'],// whitespace\n[/[ \\t\\r\\n]+/],// comments\n[/(#|\\/\\/)$/,'comment.php'],[/(#|\\/\\/)/,'comment.php','@phpLineComment'],// block comments\n[/\\/\\*/,'comment.php','@phpComment'],// strings\n[/\"/,'string.php','@phpDoubleQuoteString'],[/'/,'string.php','@phpSingleQuoteString'],// delimiters\n[/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,\\@]/,'delimiter.php'],// numbers\n[/\\d*\\d+[eE]([\\-+]?\\d+)?/,'number.float.php'],[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/,'number.float.php'],[/0[xX][0-9a-fA-F']*[0-9a-fA-F]/,'number.hex.php'],[/0[0-7']*[0-7]/,'number.octal.php'],[/0[bB][0-1']*[0-1]/,'number.binary.php'],[/\\d[\\d']*/,'number.php'],[/\\d/,'number.php']],phpComment:[[/\\*\\//,'comment.php','@pop'],[/[^*]+/,'comment.php'],[/./,'comment.php']],phpLineComment:[[/\\?>/,{token:'@rematch',next:'@pop'}],[/.$/,'comment.php','@pop'],[/[^?]+$/,'comment.php','@pop'],[/[^?]+/,'comment.php'],[/./,'comment.php']],phpDoubleQuoteString:[[/[^\\\\\"]+/,'string.php'],[/@escapes/,'string.escape.php'],[/\\\\./,'string.escape.invalid.php'],[/\"/,'string.php','@pop']],phpSingleQuoteString:[[/[^\\\\']+/,'string.php'],[/@escapes/,'string.escape.php'],[/\\\\./,'string.escape.invalid.php'],[/'/,'string.php','@pop']]},phpKeywords:['abstract','and','array','as','break','callable','case','catch','cfunction','class','clone','const','continue','declare','default','do','else','elseif','enddeclare','endfor','endforeach','endif','endswitch','endwhile','extends','false','final','for','foreach','function','global','goto','if','implements','interface','instanceof','insteadof','namespace','new','null','object','old_function','or','private','protected','public','resource','static','switch','throw','trait','try','true','use','var','while','xor','die','echo','empty','exit','eval','include','include_once','isset','list','require','require_once','return','print','unset','yield','__construct'],phpCompileTimeConstants:['__CLASS__','__DIR__','__FILE__','__LINE__','__NAMESPACE__','__METHOD__','__FUNCTION__','__TRAIT__'],phpPreDefinedVariables:['$GLOBALS','$_SERVER','$_GET','$_POST','$_FILES','$_REQUEST','$_SESSION','$_ENV','$_COOKIE','$php_errormsg','$HTTP_RAW_POST_DATA','$http_response_header','$argc','$argv'],escapes:/\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/30.dcdd857d.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string'] },\r\n        { open: '[', close: ']', notIn: ['string'] },\r\n        { open: '(', close: ')', notIn: ['string'] },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*(#|\\/\\/)region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*(#|\\/\\/)endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '',\r\n    // ignoreCase: true,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.root' }],\r\n            [/<!DOCTYPE/, 'metatag.html', '@doctype'],\r\n            [/<!--/, 'comment.html', '@comment'],\r\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\r\n            [/(<)(script)/, ['delimiter.html', { token: 'tag.html', next: '@script' }]],\r\n            [/(<)(style)/, ['delimiter.html', { token: 'tag.html', next: '@style' }]],\r\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\r\n            [/(<\\/)(\\w+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\r\n            [/</, 'delimiter.html'],\r\n            [/[^<]+/] // text\r\n        ],\r\n        doctype: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.comment' }],\r\n            [/[^>]+/, 'metatag.content.html'],\r\n            [/>/, 'metatag.html', '@pop'],\r\n        ],\r\n        comment: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.comment' }],\r\n            [/-->/, 'comment.html', '@pop'],\r\n            [/[^-]+/, 'comment.content.html'],\r\n            [/./, 'comment.content.html']\r\n        ],\r\n        otherTag: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.otherTag' }],\r\n            [/\\/?>/, 'delimiter.html', '@pop'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n        ],\r\n        // -- BEGIN <script> tags handling\r\n        // After <script\r\n        script: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.script' }],\r\n            [/type/, 'attribute.name', '@scriptAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\r\n        ],\r\n        // After <script ... type\r\n        scriptAfterType: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptAfterType' }],\r\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type =\r\n        scriptAfterTypeEquals: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptAfterTypeEquals' }],\r\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\r\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type = $S2\r\n        scriptWithCustomType: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptWithCustomType.$S2' }],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.$S2', nextEmbedded: '$S2' }],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        scriptEmbedded: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInEmbeddedState.scriptEmbedded.$S2', nextEmbedded: '@pop' }],\r\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\r\n        ],\r\n        // -- END <script> tags handling\r\n        // -- BEGIN <style> tags handling\r\n        // After <style\r\n        style: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.style' }],\r\n            [/type/, 'attribute.name', '@styleAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\r\n        ],\r\n        // After <style ... type\r\n        styleAfterType: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleAfterType' }],\r\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type =\r\n        styleAfterTypeEquals: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleAfterTypeEquals' }],\r\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\r\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type = $S2\r\n        styleWithCustomType: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleWithCustomType.$S2' }],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.$S2', nextEmbedded: '$S2' }],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        styleEmbedded: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInEmbeddedState.styleEmbedded.$S2', nextEmbedded: '@pop' }],\r\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\r\n        ],\r\n        // -- END <style> tags handling\r\n        phpInSimpleState: [\r\n            [/<\\?((php)|=)?/, 'metatag.php'],\r\n            [/\\?>/, { token: 'metatag.php', switchTo: '@$S2.$S3' }],\r\n            { include: 'phpRoot' }\r\n        ],\r\n        phpInEmbeddedState: [\r\n            [/<\\?((php)|=)?/, 'metatag.php'],\r\n            [/\\?>/, { token: 'metatag.php', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\r\n            { include: 'phpRoot' }\r\n        ],\r\n        phpRoot: [\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@phpKeywords': { token: 'keyword.php' },\r\n                        '@phpCompileTimeConstants': { token: 'constant.php' },\r\n                        '@default': 'identifier.php'\r\n                    }\r\n                }],\r\n            [/[$a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@phpPreDefinedVariables': { token: 'variable.predefined.php' },\r\n                        '@default': 'variable.php'\r\n                    }\r\n                }],\r\n            // brackets\r\n            [/[{}]/, 'delimiter.bracket.php'],\r\n            [/[\\[\\]]/, 'delimiter.array.php'],\r\n            [/[()]/, 'delimiter.parenthesis.php'],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/],\r\n            // comments\r\n            [/(#|\\/\\/)$/, 'comment.php'],\r\n            [/(#|\\/\\/)/, 'comment.php', '@phpLineComment'],\r\n            // block comments\r\n            [/\\/\\*/, 'comment.php', '@phpComment'],\r\n            // strings\r\n            [/\"/, 'string.php', '@phpDoubleQuoteString'],\r\n            [/'/, 'string.php', '@phpSingleQuoteString'],\r\n            // delimiters\r\n            [/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,\\@]/, 'delimiter.php'],\r\n            // numbers\r\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?/, 'number.float.php'],\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float.php'],\r\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, 'number.hex.php'],\r\n            [/0[0-7']*[0-7]/, 'number.octal.php'],\r\n            [/0[bB][0-1']*[0-1]/, 'number.binary.php'],\r\n            [/\\d[\\d']*/, 'number.php'],\r\n            [/\\d/, 'number.php'],\r\n        ],\r\n        phpComment: [\r\n            [/\\*\\//, 'comment.php', '@pop'],\r\n            [/[^*]+/, 'comment.php'],\r\n            [/./, 'comment.php']\r\n        ],\r\n        phpLineComment: [\r\n            [/\\?>/, { token: '@rematch', next: '@pop' }],\r\n            [/.$/, 'comment.php', '@pop'],\r\n            [/[^?]+$/, 'comment.php', '@pop'],\r\n            [/[^?]+/, 'comment.php'],\r\n            [/./, 'comment.php']\r\n        ],\r\n        phpDoubleQuoteString: [\r\n            [/[^\\\\\"]+/, 'string.php'],\r\n            [/@escapes/, 'string.escape.php'],\r\n            [/\\\\./, 'string.escape.invalid.php'],\r\n            [/\"/, 'string.php', '@pop']\r\n        ],\r\n        phpSingleQuoteString: [\r\n            [/[^\\\\']+/, 'string.php'],\r\n            [/@escapes/, 'string.escape.php'],\r\n            [/\\\\./, 'string.escape.invalid.php'],\r\n            [/'/, 'string.php', '@pop']\r\n        ],\r\n    },\r\n    phpKeywords: [\r\n        'abstract', 'and', 'array', 'as', 'break',\r\n        'callable', 'case', 'catch', 'cfunction', 'class', 'clone',\r\n        'const', 'continue', 'declare', 'default', 'do',\r\n        'else', 'elseif', 'enddeclare', 'endfor', 'endforeach',\r\n        'endif', 'endswitch', 'endwhile', 'extends', 'false', 'final',\r\n        'for', 'foreach', 'function', 'global', 'goto',\r\n        'if', 'implements', 'interface', 'instanceof', 'insteadof',\r\n        'namespace', 'new', 'null', 'object', 'old_function', 'or', 'private',\r\n        'protected', 'public', 'resource', 'static', 'switch', 'throw', 'trait',\r\n        'try', 'true', 'use', 'var', 'while', 'xor',\r\n        'die', 'echo', 'empty', 'exit', 'eval',\r\n        'include', 'include_once', 'isset', 'list', 'require',\r\n        'require_once', 'return', 'print', 'unset', 'yield',\r\n        '__construct'\r\n    ],\r\n    phpCompileTimeConstants: [\r\n        '__CLASS__',\r\n        '__DIR__',\r\n        '__FILE__',\r\n        '__LINE__',\r\n        '__NAMESPACE__',\r\n        '__METHOD__',\r\n        '__FUNCTION__',\r\n        '__TRAIT__'\r\n    ],\r\n    phpPreDefinedVariables: [\r\n        '$GLOBALS',\r\n        '$_SERVER',\r\n        '$_GET',\r\n        '$_POST',\r\n        '$_FILES',\r\n        '$_REQUEST',\r\n        '$_SESSION',\r\n        '$_ENV',\r\n        '$_COOKIE',\r\n        '$php_errormsg',\r\n        '$HTTP_RAW_POST_DATA',\r\n        '$http_response_header',\r\n        '$argc',\r\n        '$argv'\r\n    ],\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/php/php.js"],"sourceRoot":""}