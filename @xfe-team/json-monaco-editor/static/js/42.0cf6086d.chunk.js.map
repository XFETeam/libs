{"version":3,"sources":["../static/js/42.0cf6086d.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js"],"names":["webpackJsonp","1339","module","__webpack_exports__","__webpack_require__","conf","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","control","noncontrol","escapes","jsescapes","empty","tokenizer","root","token","next","nextEmbedded","include","table_header","table_body","table_common","switchTo","cases","codeblock","codeblockgh","linecontent","html","comment","tag","embeddedStyle","embeddedScript"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLA,2HAKO,IAAIC,IACPC,UACIC,cAAe,UAAQ,WAE3BC,WACK,IAAK,MACL,IAAK,MACL,IAAK,MAEVC,mBACMC,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,IAAKC,OAAQ,YAErCC,mBACMH,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAExBG,SACIC,SACIC,MAAO,GAAIC,QAAO,uCAClBC,IAAK,GAAID,QAAO,6CAIjBE,GACPC,aAAc,GACdC,aAAc,MAEdC,QAAS,yBACTC,WAAY,0BACZC,QAAS,iBAETC,UAAW,8CAEXC,OACI,OAAQ,OAAQ,WAAY,KAAM,MAAO,QACzC,KAAM,MAAO,QAAS,UAAW,OAAQ,OAAQ,SAErDC,WACIC,OAEK,SAAU,WAAY,kBAEtB,iDAAkD,QAAS,UAAW,UAAW,aAEjF,mBAAoB,YAEpB,sBAAuB,mBAEvB,SAAU,YAEV,yBAA0B,YAE1B,sBAAuB,WAEvB,oCAAsCC,MAAO,SAAUC,KAAM,gBAE7D,kCAAoCD,MAAO,SAAUC,KAAM,eAAgBC,aAAc,QAEzF,eAAiBF,MAAO,SAAUC,KAAM,gBAEvCE,QAAS,iBAEfC,eACMD,QAAS,kBACV,SAAU,yBAEfE,aACMF,QAAS,kBACTA,QAAS,iBAEfG,eACK,gBAAkBN,MAAO,UAAWO,SAAU,gBAC9C,SAAU,uBACV,YAAa,WAAY,SACzB,QAAS,WAAY,SACrB,MACOC,OACI,OAAQ,sBACR,WAAY,2BAI5BC,YACK,eAAiBT,MAAO,SAAUC,KAAM,UACxC,eAAiBD,MAAO,SAAUC,KAAM,UACxC,MAAO,oBAGZS,cACK,WAAaV,MAAO,kBAAmBC,KAAM,OAAQC,aAAc,UACnE,QAAS,oBAEdS,cAEK,QAAS,kBACT,WAAY,WAEZ,oCAAqC,WACrC,sCAAuC,WACvC,cAAe,aACf,yBAA0B,aAC1B,uBAAwB,aAExB,cAAe,kBACf,+CAAgD,cAAe,GAAI,iBACnE,oCAAqC,gBAEpCR,QAAS,SAOfS,OAEK,YAAa,QACb,UACOJ,OACI,UAAYR,MAAO,MAAOC,KAAM,WAChC,YAAcD,MAAO,MAAOC,KAAM,eAG7C,gBAAkBD,MAAO,SACzB,OAAQ,UAAW,aAExBa,UACK,UAAW,oBACX,MAAO,UAAW,SAClB,OAAQ,4BACR,QAAS,oBAGdC,MACK,aAAc,UACd,gCAAiC,sBAAuB,iBAAkB,eACjEd,MAAO,cAAeO,SAAU,eAClC,iBACP,gCAAiC,sBAAuB,iBAAkB,eACjEP,MAAO,cAAeO,SAAU,eAClC,iBACP,mCAAoC,sBAAuB,iBAAkB,iBAC7E,MAAO,wBACP,MAAO,MAAO,SACd,KACOC,OACI,cAAgBR,MAAO,MAAOO,SAAU,gBAAiBL,aAAc,YACvE,eACIM,OACI,KAASR,MAAO,MAAOO,SAAU,iBAAkBL,aAAc,OACjE,YAAcF,MAAO,MAAOO,SAAU,iBAAkBL,aAAc,qBAG9E,YAAcF,MAAO,MAAOC,KAAM,YAIlDc,gBACK,QAAS,KACT,gBAAkBf,MAAO,WAAYC,KAAM,OAAQC,aAAc,UACjE,IAAK,KAEVc,iBACK,QAAS,KACT,iBAAmBhB,MAAO,WAAYC,KAAM,OAAQC,aAAc,UAClE,IAAK","file":"static/js/42.0cf6086d.chunk.js","sourcesContent":["webpackJsonp([42],{\n\n/***/ 1339:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/var conf={comments:{blockComment:['<!--','-->']},brackets:[['{','}'],['[',']'],['(',')']],autoClosingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'<',close:'>',notIn:['string']}],surroundingPairs:[{open:'(',close:')'},{open:'[',close:']'},{open:'`',close:'`'}],folding:{markers:{start:new RegExp(\"^\\\\s*<!--\\\\s*#?region\\\\b.*-->\"),end:new RegExp(\"^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->\")}}};var language={defaultToken:'',tokenPostfix:'.md',// escape codes\ncontrol:/[\\\\`*_\\[\\]{}()#+\\-\\.!]/,noncontrol:/[^\\\\`*_\\[\\]{}()#+\\-\\.!]/,escapes:/\\\\(?:@control)/,// escape codes for javascript/CSS strings\njsescapes:/\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,// non matched elements\nempty:['area','base','basefont','br','col','frame','hr','img','input','isindex','link','meta','param'],tokenizer:{root:[// markdown tables\n[/^\\s*\\|/,'@rematch','@table_header'],// headers (with #)\n[/^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)/,['white','keyword','keyword','keyword']],// headers (with =)\n[/^\\s*(=+|\\-+)\\s*$/,'keyword'],// headers (with ***)\n[/^\\s*((\\*[ ]?)+)\\s*$/,'meta.separator'],// quote\n[/^\\s*>+/,'comment'],// list (starting with * or number)\n[/^\\s*([\\*\\-+:]|\\d+\\.)\\s/,'keyword'],// code block (4 spaces indent)\n[/^(\\t|[ ]{4})[^ ].*$/,'string'],// code block (3 tilde)\n[/^\\s*~~~\\s*((?:\\w|[\\/\\-#])+)?\\s*$/,{token:'string',next:'@codeblock'}],// github style code blocks (with backticks and language)\n[/^\\s*```\\s*((?:\\w|[\\/\\-#])+).*$/,{token:'string',next:'@codeblockgh',nextEmbedded:'$1'}],// github style code blocks (with backticks but no language)\n[/^\\s*```\\s*$/,{token:'string',next:'@codeblock'}],// markup within lines\n{include:'@linecontent'}],table_header:[{include:'@table_common'},[/[^\\|]+/,'keyword.table.header']],table_body:[{include:'@table_common'},{include:'@linecontent'}],table_common:[[/\\s*[\\-:]+\\s*/,{token:'keyword',switchTo:'table_body'}],[/^\\s*\\|/,'keyword.table.left'],[/^\\s*[^\\|]/,'@rematch','@pop'],[/^\\s*$/,'@rematch','@pop'],[/\\|/,{cases:{'@eos':'keyword.table.right','@default':'keyword.table.middle'}}]],codeblock:[[/^\\s*~~~\\s*$/,{token:'string',next:'@pop'}],[/^\\s*```\\s*$/,{token:'string',next:'@pop'}],[/.*$/,'variable.source']],// github style code blocks\ncodeblockgh:[[/```\\s*$/,{token:'variable.source',next:'@pop',nextEmbedded:'@pop'}],[/[^`]+/,'variable.source']],linecontent:[// escapes\n[/&\\w+;/,'string.escape'],[/@escapes/,'escape'],// various markup\n[/\\b__([^\\\\_]|@escapes|_(?!_))+__\\b/,'strong'],[/\\*\\*([^\\\\*]|@escapes|\\*(?!\\*))+\\*\\*/,'strong'],[/\\b_[^_]+_\\b/,'emphasis'],[/\\*([^\\\\*]|@escapes)+\\*/,'emphasis'],[/`([^\\\\`]|@escapes)+`/,'variable'],// links\n[/\\{+[^}]+\\}+/,'string.target'],[/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))/,['string.link','','string.link']],[/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])/,'string.link'],// or html\n{include:'html'}],// Note: it is tempting to rather switch to the real HTML mode instead of building our own here\n// but currently there is a limitation in Monarch that prevents us from doing it: The opening\n// '<' would start the HTML mode, however there is no way to jump 1 character back to let the\n// HTML mode also tokenize the opening angle bracket. Thus, even though we could jump to HTML,\n// we cannot correctly tokenize it in that mode yet.\nhtml:[// html tags\n[/<(\\w+)\\/>/,'tag'],[/<(\\w+)/,{cases:{'@empty':{token:'tag',next:'@tag.$1'},'@default':{token:'tag',next:'@tag.$1'}}}],[/<\\/(\\w+)\\s*>/,{token:'tag'}],[/<!--/,'comment','@comment']],comment:[[/[^<\\-]+/,'comment.content'],[/-->/,'comment','@pop'],[/<!--/,'comment.content.invalid'],[/[<\\-]/,'comment.content']],// Almost full HTML tag matching, complete with embedded scripts & styles\ntag:[[/[ \\t\\r\\n]+/,'white'],[/(type)(\\s*=\\s*)(\")([^\"]+)(\")/,['attribute.name.html','delimiter.html','string.html',{token:'string.html',switchTo:'@tag.$S2.$4'},'string.html']],[/(type)(\\s*=\\s*)(')([^']+)(')/,['attribute.name.html','delimiter.html','string.html',{token:'string.html',switchTo:'@tag.$S2.$4'},'string.html']],[/(\\w+)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/,['attribute.name.html','delimiter.html','string.html']],[/\\w+/,'attribute.name.html'],[/\\/>/,'tag','@pop'],[/>/,{cases:{'$S2==style':{token:'tag',switchTo:'embeddedStyle',nextEmbedded:'text/css'},'$S2==script':{cases:{'$S3':{token:'tag',switchTo:'embeddedScript',nextEmbedded:'$S3'},'@default':{token:'tag',switchTo:'embeddedScript',nextEmbedded:'text/javascript'}}},'@default':{token:'tag',next:'@pop'}}}]],embeddedStyle:[[/[^<]+/,''],[/<\\/style\\s*>/,{token:'@rematch',next:'@pop',nextEmbedded:'@pop'}],[/</,'']],embeddedScript:[[/[^<]+/,''],[/<\\/script\\s*>/,{token:'@rematch',next:'@pop',nextEmbedded:'@pop'}],[/</,'']]}};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/42.0cf6086d.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        blockComment: ['<!--', '-->',]\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>', notIn: ['string'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '(', close: ')' },\r\n        { open: '[', close: ']' },\r\n        { open: '`', close: '`' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*<!--\\\\s*#?region\\\\b.*-->\"),\r\n            end: new RegExp(\"^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.md',\r\n    // escape codes\r\n    control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\r\n    noncontrol: /[^\\\\`*_\\[\\]{}()#+\\-\\.!]/,\r\n    escapes: /\\\\(?:@control)/,\r\n    // escape codes for javascript/CSS strings\r\n    jsescapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\r\n    // non matched elements\r\n    empty: [\r\n        'area', 'base', 'basefont', 'br', 'col', 'frame',\r\n        'hr', 'img', 'input', 'isindex', 'link', 'meta', 'param'\r\n    ],\r\n    tokenizer: {\r\n        root: [\r\n            // markdown tables\r\n            [/^\\s*\\|/, '@rematch', '@table_header'],\r\n            // headers (with #)\r\n            [/^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)/, ['white', 'keyword', 'keyword', 'keyword']],\r\n            // headers (with =)\r\n            [/^\\s*(=+|\\-+)\\s*$/, 'keyword'],\r\n            // headers (with ***)\r\n            [/^\\s*((\\*[ ]?)+)\\s*$/, 'meta.separator'],\r\n            // quote\r\n            [/^\\s*>+/, 'comment'],\r\n            // list (starting with * or number)\r\n            [/^\\s*([\\*\\-+:]|\\d+\\.)\\s/, 'keyword'],\r\n            // code block (4 spaces indent)\r\n            [/^(\\t|[ ]{4})[^ ].*$/, 'string'],\r\n            // code block (3 tilde)\r\n            [/^\\s*~~~\\s*((?:\\w|[\\/\\-#])+)?\\s*$/, { token: 'string', next: '@codeblock' }],\r\n            // github style code blocks (with backticks and language)\r\n            [/^\\s*```\\s*((?:\\w|[\\/\\-#])+).*$/, { token: 'string', next: '@codeblockgh', nextEmbedded: '$1' }],\r\n            // github style code blocks (with backticks but no language)\r\n            [/^\\s*```\\s*$/, { token: 'string', next: '@codeblock' }],\r\n            // markup within lines\r\n            { include: '@linecontent' },\r\n        ],\r\n        table_header: [\r\n            { include: '@table_common' },\r\n            [/[^\\|]+/, 'keyword.table.header'],\r\n        ],\r\n        table_body: [\r\n            { include: '@table_common' },\r\n            { include: '@linecontent' },\r\n        ],\r\n        table_common: [\r\n            [/\\s*[\\-:]+\\s*/, { token: 'keyword', switchTo: 'table_body' }],\r\n            [/^\\s*\\|/, 'keyword.table.left'],\r\n            [/^\\s*[^\\|]/, '@rematch', '@pop'],\r\n            [/^\\s*$/, '@rematch', '@pop'],\r\n            [/\\|/, {\r\n                    cases: {\r\n                        '@eos': 'keyword.table.right',\r\n                        '@default': 'keyword.table.middle',\r\n                    }\r\n                }],\r\n        ],\r\n        codeblock: [\r\n            [/^\\s*~~~\\s*$/, { token: 'string', next: '@pop' }],\r\n            [/^\\s*```\\s*$/, { token: 'string', next: '@pop' }],\r\n            [/.*$/, 'variable.source'],\r\n        ],\r\n        // github style code blocks\r\n        codeblockgh: [\r\n            [/```\\s*$/, { token: 'variable.source', next: '@pop', nextEmbedded: '@pop' }],\r\n            [/[^`]+/, 'variable.source'],\r\n        ],\r\n        linecontent: [\r\n            // escapes\r\n            [/&\\w+;/, 'string.escape'],\r\n            [/@escapes/, 'escape'],\r\n            // various markup\r\n            [/\\b__([^\\\\_]|@escapes|_(?!_))+__\\b/, 'strong'],\r\n            [/\\*\\*([^\\\\*]|@escapes|\\*(?!\\*))+\\*\\*/, 'strong'],\r\n            [/\\b_[^_]+_\\b/, 'emphasis'],\r\n            [/\\*([^\\\\*]|@escapes)+\\*/, 'emphasis'],\r\n            [/`([^\\\\`]|@escapes)+`/, 'variable'],\r\n            // links\r\n            [/\\{+[^}]+\\}+/, 'string.target'],\r\n            [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))/, ['string.link', '', 'string.link']],\r\n            [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])/, 'string.link'],\r\n            // or html\r\n            { include: 'html' },\r\n        ],\r\n        // Note: it is tempting to rather switch to the real HTML mode instead of building our own here\r\n        // but currently there is a limitation in Monarch that prevents us from doing it: The opening\r\n        // '<' would start the HTML mode, however there is no way to jump 1 character back to let the\r\n        // HTML mode also tokenize the opening angle bracket. Thus, even though we could jump to HTML,\r\n        // we cannot correctly tokenize it in that mode yet.\r\n        html: [\r\n            // html tags\r\n            [/<(\\w+)\\/>/, 'tag'],\r\n            [/<(\\w+)/, {\r\n                    cases: {\r\n                        '@empty': { token: 'tag', next: '@tag.$1' },\r\n                        '@default': { token: 'tag', next: '@tag.$1' }\r\n                    }\r\n                }],\r\n            [/<\\/(\\w+)\\s*>/, { token: 'tag' }],\r\n            [/<!--/, 'comment', '@comment']\r\n        ],\r\n        comment: [\r\n            [/[^<\\-]+/, 'comment.content'],\r\n            [/-->/, 'comment', '@pop'],\r\n            [/<!--/, 'comment.content.invalid'],\r\n            [/[<\\-]/, 'comment.content']\r\n        ],\r\n        // Almost full HTML tag matching, complete with embedded scripts & styles\r\n        tag: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/(type)(\\s*=\\s*)(\")([^\"]+)(\")/, ['attribute.name.html', 'delimiter.html', 'string.html',\r\n                    { token: 'string.html', switchTo: '@tag.$S2.$4' },\r\n                    'string.html']],\r\n            [/(type)(\\s*=\\s*)(')([^']+)(')/, ['attribute.name.html', 'delimiter.html', 'string.html',\r\n                    { token: 'string.html', switchTo: '@tag.$S2.$4' },\r\n                    'string.html']],\r\n            [/(\\w+)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, ['attribute.name.html', 'delimiter.html', 'string.html']],\r\n            [/\\w+/, 'attribute.name.html'],\r\n            [/\\/>/, 'tag', '@pop'],\r\n            [/>/, {\r\n                    cases: {\r\n                        '$S2==style': { token: 'tag', switchTo: 'embeddedStyle', nextEmbedded: 'text/css' },\r\n                        '$S2==script': {\r\n                            cases: {\r\n                                '$S3': { token: 'tag', switchTo: 'embeddedScript', nextEmbedded: '$S3' },\r\n                                '@default': { token: 'tag', switchTo: 'embeddedScript', nextEmbedded: 'text/javascript' }\r\n                            }\r\n                        },\r\n                        '@default': { token: 'tag', next: '@pop' }\r\n                    }\r\n                }],\r\n        ],\r\n        embeddedStyle: [\r\n            [/[^<]+/, ''],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\r\n            [/</, '']\r\n        ],\r\n        embeddedScript: [\r\n            [/[^<]+/, ''],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\r\n            [/</, '']\r\n        ],\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js"],"sourceRoot":""}