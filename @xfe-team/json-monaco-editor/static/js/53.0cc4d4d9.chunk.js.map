{"version":3,"sources":["../static/js/53.0cc4d4d9.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js"],"names":["webpackJsonp","1319","module","__webpack_exports__","__webpack_require__","conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","token","keywords","namespaceFollows","parenFollows","operators","symbols","escapes","tokenizer","root","cases","next","include","qualified","namespace","comment","string","litstring","litinterpstring","interpolatedstring","whitespace"],"mappings":"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","file":"static/js/53.0cc4d4d9.chunk.js","sourcesContent":["webpackJsonp([53],{\n\n/***/ 1319:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/var conf={wordPattern:/(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,comments:{lineComment:'//',blockComment:['/*','*/']},brackets:[['{','}'],['[',']'],['(',')']],autoClosingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\\'',close:'\\'',notIn:['string','comment']},{open:'\"',close:'\"',notIn:['string','comment']}],surroundingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'<',close:'>'},{open:'\\'',close:'\\''},{open:'\"',close:'\"'}],folding:{markers:{start:new RegExp(\"^\\\\s*#region\\\\b\"),end:new RegExp(\"^\\\\s*#endregion\\\\b\")}}};var language={defaultToken:'',tokenPostfix:'.cs',brackets:[{open:'{',close:'}',token:'delimiter.curly'},{open:'[',close:']',token:'delimiter.square'},{open:'(',close:')',token:'delimiter.parenthesis'},{open:'<',close:'>',token:'delimiter.angle'}],keywords:['extern','alias','using','bool','decimal','sbyte','byte','short','ushort','int','uint','long','ulong','char','float','double','object','dynamic','string','assembly','is','as','ref','out','this','base','new','typeof','void','checked','unchecked','default','delegate','var','const','if','else','switch','case','while','do','for','foreach','in','break','continue','goto','return','throw','try','catch','finally','lock','yield','from','let','where','join','on','equals','into','orderby','ascending','descending','select','group','by','namespace','partial','class','field','event','method','param','property','public','protected','internal','private','abstract','sealed','static','struct','readonly','volatile','virtual','override','params','get','set','add','remove','operator','true','false','implicit','explicit','interface','enum','null','async','await','fixed','sizeof','stackalloc','unsafe','nameof','when'],namespaceFollows:['namespace','using'],parenFollows:['if','for','while','switch','foreach','using','catch','when'],operators:['=','??','||','&&','|','^','&','==','!=','<=','>=','<<','+','-','*','/','%','!','~','++','--','+=','-=','*=','/=','%=','&=','|=','^=','<<=','>>=','>>','=>'],symbols:/[=><!~?:&|+\\-*\\/\\^%]+/,// escape sequences\nescapes:/\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,// The main tokenizer for our languages\ntokenizer:{root:[// identifiers and keywords\n[/\\@?[a-zA-Z_]\\w*/,{cases:{'@namespaceFollows':{token:'keyword.$0',next:'@namespace'},'@keywords':{token:'keyword.$0',next:'@qualified'},'@default':{token:'identifier',next:'@qualified'}}}],// whitespace\n{include:'@whitespace'},// delimiters and operators\n[/}/,{cases:{'$S2==interpolatedstring':{token:'string.quote',next:'@pop'},'$S2==litinterpstring':{token:'string.quote',next:'@pop'},'@default':'@brackets'}}],[/[{}()\\[\\]]/,'@brackets'],[/[<>](?!@symbols)/,'@brackets'],[/@symbols/,{cases:{'@operators':'delimiter','@default':''}}],// numbers\n[/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/,'number.float'],[/0[xX][0-9a-fA-F_]+/,'number.hex'],[/0[bB][01_]+/,'number.hex'],[/[0-9_]+/,'number'],// delimiter: after number because of .\\d floats\n[/[;,.]/,'delimiter'],// strings\n[/\"([^\"\\\\]|\\\\.)*$/,'string.invalid'],[/\"/,{token:'string.quote',next:'@string'}],[/\\$\\@\"/,{token:'string.quote',next:'@litinterpstring'}],[/\\@\"/,{token:'string.quote',next:'@litstring'}],[/\\$\"/,{token:'string.quote',next:'@interpolatedstring'}],// characters\n[/'[^\\\\']'/,'string'],[/(')(@escapes)(')/,['string','string.escape','string']],[/'/,'string.invalid']],qualified:[[/[a-zA-Z_][\\w]*/,{cases:{'@keywords':{token:'keyword.$0'},'@default':'identifier'}}],[/\\./,'delimiter'],['','','@pop']],namespace:[{include:'@whitespace'},[/[A-Z]\\w*/,'namespace'],[/[\\.=]/,'delimiter'],['','','@pop']],comment:[[/[^\\/*]+/,'comment'],// [/\\/\\*/,    'comment', '@push' ],    // no nested comments :-(\n['\\\\*/','comment','@pop'],[/[\\/*]/,'comment']],string:[[/[^\\\\\"]+/,'string'],[/@escapes/,'string.escape'],[/\\\\./,'string.escape.invalid'],[/\"/,{token:'string.quote',next:'@pop'}]],litstring:[[/[^\"]+/,'string'],[/\"\"/,'string.escape'],[/\"/,{token:'string.quote',next:'@pop'}]],litinterpstring:[[/[^\"{]+/,'string'],[/\"\"/,'string.escape'],[/{{/,'string.escape'],[/}}/,'string.escape'],[/{/,{token:'string.quote',next:'root.litinterpstring'}],[/\"/,{token:'string.quote',next:'@pop'}]],interpolatedstring:[[/[^\\\\\"{]+/,'string'],[/@escapes/,'string.escape'],[/\\\\./,'string.escape.invalid'],[/{{/,'string.escape'],[/}}/,'string.escape'],[/{/,{token:'string.quote',next:'root.interpolatedstring'}],[/\"/,{token:'string.quote',next:'@pop'}]],whitespace:[[/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/,'directive.csx'],[/^[ \\t\\v\\f]*#\\w.*$/,'namespace.cpp'],[/[ \\t\\v\\f\\r\\n]+/,''],[/\\/\\*/,'comment','@comment'],[/\\/\\/.*$/,'comment']]}};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/53.0cc4d4d9.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.cs',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    keywords: [\r\n        'extern', 'alias', 'using', 'bool', 'decimal', 'sbyte', 'byte', 'short',\r\n        'ushort', 'int', 'uint', 'long', 'ulong', 'char', 'float', 'double',\r\n        'object', 'dynamic', 'string', 'assembly', 'is', 'as', 'ref',\r\n        'out', 'this', 'base', 'new', 'typeof', 'void', 'checked', 'unchecked',\r\n        'default', 'delegate', 'var', 'const', 'if', 'else', 'switch', 'case',\r\n        'while', 'do', 'for', 'foreach', 'in', 'break', 'continue', 'goto',\r\n        'return', 'throw', 'try', 'catch', 'finally', 'lock', 'yield', 'from',\r\n        'let', 'where', 'join', 'on', 'equals', 'into', 'orderby', 'ascending',\r\n        'descending', 'select', 'group', 'by', 'namespace', 'partial', 'class',\r\n        'field', 'event', 'method', 'param', 'property', 'public', 'protected',\r\n        'internal', 'private', 'abstract', 'sealed', 'static', 'struct', 'readonly',\r\n        'volatile', 'virtual', 'override', 'params', 'get', 'set', 'add', 'remove',\r\n        'operator', 'true', 'false', 'implicit', 'explicit', 'interface', 'enum',\r\n        'null', 'async', 'await', 'fixed', 'sizeof', 'stackalloc', 'unsafe', 'nameof',\r\n        'when'\r\n    ],\r\n    namespaceFollows: [\r\n        'namespace', 'using',\r\n    ],\r\n    parenFollows: [\r\n        'if', 'for', 'while', 'switch', 'foreach', 'using', 'catch', 'when'\r\n    ],\r\n    operators: [\r\n        '=', '??', '||', '&&', '|', '^', '&', '==', '!=', '<=', '>=', '<<',\r\n        '+', '-', '*', '/', '%', '!', '~', '++', '--', '+=',\r\n        '-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>=', '>>', '=>'\r\n    ],\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    // escape sequences\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/\\@?[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@namespaceFollows': { token: 'keyword.$0', next: '@namespace' },\r\n                        '@keywords': { token: 'keyword.$0', next: '@qualified' },\r\n                        '@default': { token: 'identifier', next: '@qualified' }\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/}/, {\r\n                    cases: {\r\n                        '$S2==interpolatedstring': { token: 'string.quote', next: '@pop' },\r\n                        '$S2==litinterpstring': { token: 'string.quote', next: '@pop' },\r\n                        '@default': '@brackets'\r\n                    }\r\n                }],\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]+/, 'number.hex'],\r\n            [/0[bB][01_]+/, 'number.hex'],\r\n            [/[0-9_]+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, { token: 'string.quote', next: '@string' }],\r\n            [/\\$\\@\"/, { token: 'string.quote', next: '@litinterpstring' }],\r\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\r\n            [/\\$\"/, { token: 'string.quote', next: '@interpolatedstring' }],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        qualified: [\r\n            [/[a-zA-Z_][\\w]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            [/\\./, 'delimiter'],\r\n            ['', '', '@pop'],\r\n        ],\r\n        namespace: [\r\n            { include: '@whitespace' },\r\n            [/[A-Z]\\w*/, 'namespace'],\r\n            [/[\\.=]/, 'delimiter'],\r\n            ['', '', '@pop'],\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            // [/\\/\\*/,    'comment', '@push' ],    // no nested comments :-(\r\n            ['\\\\*/', 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        litstring: [\r\n            [/[^\"]+/, 'string'],\r\n            [/\"\"/, 'string.escape'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        litinterpstring: [\r\n            [/[^\"{]+/, 'string'],\r\n            [/\"\"/, 'string.escape'],\r\n            [/{{/, 'string.escape'],\r\n            [/}}/, 'string.escape'],\r\n            [/{/, { token: 'string.quote', next: 'root.litinterpstring' }],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        interpolatedstring: [\r\n            [/[^\\\\\"{]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/{{/, 'string.escape'],\r\n            [/}}/, 'string.escape'],\r\n            [/{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        whitespace: [\r\n            [/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/, 'directive.csx'],\r\n            [/^[ \\t\\v\\f]*#\\w.*$/, 'namespace.cpp'],\r\n            [/[ \\t\\v\\f\\r\\n]+/, ''],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js"],"sourceRoot":""}