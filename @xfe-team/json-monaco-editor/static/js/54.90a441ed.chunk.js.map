{"version":3,"sources":["../static/js/54.90a441ed.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.js"],"names":["webpackJsonp","1318","module","__webpack_exports__","__webpack_require__","conf","wordPattern","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","token","regEx","keywords","symbols","escapes","tokenizer","root","cases","next","string","herestring","comment","hereregexp"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLA,2HAKO,IAAIC,IACPC,YAAa,wFACbC,UACIC,cAAe,MAAO,OACtBC,YAAa,KAEjBC,WACK,IAAK,MACL,IAAK,MACL,IAAK,MAEVC,mBACMC,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAMC,MAAO,MAEzBC,mBACMF,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAMC,MAAO,MAEzBE,SACIC,SACIC,MAAO,GAAIC,QAAO,mBAClBC,IAAK,GAAID,QAAO,yBAIjBE,GACPC,aAAc,GACdC,YAAY,EACZC,aAAc,UACdb,WACME,KAAM,IAAKC,MAAO,IAAKW,MAAO,oBAC9BZ,KAAM,IAAKC,MAAO,IAAKW,MAAO,qBAC9BZ,KAAM,IAAKC,MAAO,IAAKW,MAAO,0BAEpCC,MAAO,qCACPC,UACI,MAAO,KAAM,KAAM,OAAQ,MAAO,KAAM,MAAO,IAAK,KAAM,MAC1D,OAAQ,QAAS,OAAQ,OACzB,MAAO,SAAU,SAAU,KAAM,aACjC,SAAU,QAAS,QAAS,WAAY,WACxC,KAAM,OAAQ,SAAU,MAAO,QAAS,KAAM,MAAO,QAAS,UAC9D,QAAS,UAAW,QACpB,YAAa,OAAQ,SAAU,QAAS,OAAQ,KAAM,KAAM,QAGhEC,QAAS,4BACTC,QAAS,yEAETC,WACIC,OAEK,iBAAkB,wBAClB,gBACOC,OACI,KAAQ,sBACR,aAAeP,MAAO,cACtB,WAAY,OAIvB,aAAc,KAEd,MAAO,UAAW,aAClB,OAAQ,YAER,OAASA,MAAO,SAAUQ,KAAM,iBAChC,kBAAmB,GAAI,YACvB,qBAAsB,YAAa,GAAI,YACvC,qBAAsB,YAAa,GAAI,YACvC,qBAAsB,YAAa,GAAI,YACvC,qBAAsB,YAAa,GAAI,YACvC,qBAAsB,YAAa,GAAI,YACvC,qBAAsB,YAAa,GAAI,YACvC,qBAAsB,YAAa,GAAI,YACvC,qBAAsB,YAAa,GAAI,YACvC,qBAAsB,YAAa,GAAI,YACvC,qBAAsB,YAAa,GAAI,YACvC,qBAAsB,GAAI,GAAI,YAE9B,KACOD,OACI,2BAA6BP,MAAO,SAAUQ,KAAM,QACpD,WAAY,gBAGvB,aAAc,cACd,WAAY,cAEZ,sBAAuB,iBACvB,2BAA4B,iBAC5B,oBAAqB,eACrB,gBAAiB,iBACjB,MAAO,WAEP,OAAQ,cAER,MAAO,SAAU,oBACjB,MAAO,SAAU,oBACjB,KACOD,OACI,OAAQ,SACR,YAAcP,MAAO,SAAUQ,KAAM,iBAGhD,KACOD,OACI,OAAQ,SACR,YAAcP,MAAO,SAAUQ,KAAM,iBAIrDC,SACK,aAAc,WACd,WAAY,kBACZ,KAAM,0BACN,KAAM,0BACN,MACOF,OACI,UAAYP,MAAO,SAAUQ,KAAM,2BACnC,WAAY,aAGvB,QACOD,OACI,WAAaP,MAAO,SAAUQ,KAAM,QACpC,WAAY,aAGvB,IAAK,WAEVE,aACK,aACOH,OACI,WAAaP,MAAO,SAAUQ,KAAM,QACpC,WAAY,aAGvB,YAAa,WACb,QAAS,WACT,WAAY,kBACZ,KAAM,0BACN,MAAQR,MAAO,eAAgBQ,KAAM,6BACrC,IAAK,WAEVG,UACK,QAAS,YACT,MAAO,UAAW,SAClB,IAAK,YAEVC,aACK,YAAa,WACb,MAAO,WACP,OAAQ,YACR,aAAeZ,MAAO,SAAUQ,KAAM,UACtC,KAAM","file":"static/js/54.90a441ed.chunk.js","sourcesContent":["webpackJsonp([54],{\n\n/***/ 1318:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/var conf={wordPattern:/(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,comments:{blockComment:['###','###'],lineComment:'#'},brackets:[['{','}'],['[',']'],['(',')']],autoClosingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\"',close:'\"'},{open:'\\'',close:'\\''}],surroundingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\"',close:'\"'},{open:'\\'',close:'\\''}],folding:{markers:{start:new RegExp(\"^\\\\s*#region\\\\b\"),end:new RegExp(\"^\\\\s*#endregion\\\\b\")}}};var language={defaultToken:'',ignoreCase:true,tokenPostfix:'.coffee',brackets:[{open:'{',close:'}',token:'delimiter.curly'},{open:'[',close:']',token:'delimiter.square'},{open:'(',close:')',token:'delimiter.parenthesis'}],regEx:/\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,keywords:['and','or','is','isnt','not','on','yes','@','no','off','true','false','null','this','new','delete','typeof','in','instanceof','return','throw','break','continue','debugger','if','else','switch','for','while','do','try','catch','finally','class','extends','super','undefined','then','unless','until','loop','of','by','when'],// we include these common regular expressions\nsymbols:/[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/,escapes:/\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,// The main tokenizer for our languages\ntokenizer:{root:[// identifiers and keywords\n[/\\@[a-zA-Z_]\\w*/,'variable.predefined'],[/[a-zA-Z_]\\w*/,{cases:{'this':'variable.predefined','@keywords':{token:'keyword.$0'},'@default':''}}],// whitespace\n[/[ \\t\\r\\n]+/,''],// Comments\n[/###/,'comment','@comment'],[/#.*$/,'comment'],// regular expressions\n['///',{token:'regexp',next:'@hereregexp'}],[/^(\\s*)(@regEx)/,['','regexp']],[/(\\()(\\s*)(@regEx)/,['@brackets','','regexp']],[/(\\,)(\\s*)(@regEx)/,['delimiter','','regexp']],[/(\\=)(\\s*)(@regEx)/,['delimiter','','regexp']],[/(\\:)(\\s*)(@regEx)/,['delimiter','','regexp']],[/(\\[)(\\s*)(@regEx)/,['@brackets','','regexp']],[/(\\!)(\\s*)(@regEx)/,['delimiter','','regexp']],[/(\\&)(\\s*)(@regEx)/,['delimiter','','regexp']],[/(\\|)(\\s*)(@regEx)/,['delimiter','','regexp']],[/(\\?)(\\s*)(@regEx)/,['delimiter','','regexp']],[/(\\{)(\\s*)(@regEx)/,['@brackets','','regexp']],[/(\\;)(\\s*)(@regEx)/,['','','regexp']],// delimiters\n[/}/,{cases:{'$S2==interpolatedstring':{token:'string',next:'@pop'},'@default':'@brackets'}}],[/[{}()\\[\\]]/,'@brackets'],[/@symbols/,'delimiter'],// numbers\n[/\\d+[eE]([\\-+]?\\d+)?/,'number.float'],[/\\d+\\.\\d+([eE][\\-+]?\\d+)?/,'number.float'],[/0[xX][0-9a-fA-F]+/,'number.hex'],[/0[0-7]+(?!\\d)/,'number.octal'],[/\\d+/,'number'],// delimiter: after number because of .\\d floats\n[/[,.]/,'delimiter'],// strings:\n[/\"\"\"/,'string','@herestring.\"\"\"'],[/'''/,'string','@herestring.\\'\\'\\''],[/\"/,{cases:{'@eos':'string','@default':{token:'string',next:'@string.\"'}}}],[/'/,{cases:{'@eos':'string','@default':{token:'string',next:'@string.\\''}}}]],string:[[/[^\"'\\#\\\\]+/,'string'],[/@escapes/,'string.escape'],[/\\./,'string.escape.invalid'],[/\\./,'string.escape.invalid'],[/#{/,{cases:{'$S2==\"':{token:'string',next:'root.interpolatedstring'},'@default':'string'}}],[/[\"']/,{cases:{'$#==$S2':{token:'string',next:'@pop'},'@default':'string'}}],[/#/,'string']],herestring:[[/(\"\"\"|''')/,{cases:{'$1==$S2':{token:'string',next:'@pop'},'@default':'string'}}],[/[^#\\\\'\"]+/,'string'],[/['\"]+/,'string'],[/@escapes/,'string.escape'],[/\\./,'string.escape.invalid'],[/#{/,{token:'string.quote',next:'root.interpolatedstring'}],[/#/,'string']],comment:[[/[^#]+/,'comment'],[/###/,'comment','@pop'],[/#/,'comment']],hereregexp:[[/[^\\\\\\/#]+/,'regexp'],[/\\\\./,'regexp'],[/#.*$/,'comment'],['///[igm]*',{token:'regexp',next:'@pop'}],[/\\//,'regexp']]}};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/54.90a441ed.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        blockComment: ['###', '###'],\r\n        lineComment: '#'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.coffee',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n    ],\r\n    regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\r\n    keywords: [\r\n        'and', 'or', 'is', 'isnt', 'not', 'on', 'yes', '@', 'no', 'off',\r\n        'true', 'false', 'null', 'this',\r\n        'new', 'delete', 'typeof', 'in', 'instanceof',\r\n        'return', 'throw', 'break', 'continue', 'debugger',\r\n        'if', 'else', 'switch', 'for', 'while', 'do', 'try', 'catch', 'finally',\r\n        'class', 'extends', 'super',\r\n        'undefined', 'then', 'unless', 'until', 'loop', 'of', 'by', 'when'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/\\@[a-zA-Z_]\\w*/, 'variable.predefined'],\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        'this': 'variable.predefined',\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            // Comments\r\n            [/###/, 'comment', '@comment'],\r\n            [/#.*$/, 'comment'],\r\n            // regular expressions\r\n            ['///', { token: 'regexp', next: '@hereregexp' }],\r\n            [/^(\\s*)(@regEx)/, ['', 'regexp']],\r\n            [/(\\()(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\r\n            [/(\\,)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\=)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\:)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\[)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\r\n            [/(\\!)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\&)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\|)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\?)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\{)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\r\n            [/(\\;)(\\s*)(@regEx)/, ['', '', 'regexp']],\r\n            // delimiters\r\n            [/}/, {\r\n                    cases: {\r\n                        '$S2==interpolatedstring': { token: 'string', next: '@pop' },\r\n                        '@default': '@brackets'\r\n                    }\r\n                }],\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\r\n            [/0[0-7]+(?!\\d)/, 'number.octal'],\r\n            [/\\d+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[,.]/, 'delimiter'],\r\n            // strings:\r\n            [/\"\"\"/, 'string', '@herestring.\"\"\"'],\r\n            [/'''/, 'string', '@herestring.\\'\\'\\''],\r\n            [/\"/, {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\"' }\r\n                    }\r\n                }],\r\n            [/'/, {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\\'' }\r\n                    }\r\n                }],\r\n        ],\r\n        string: [\r\n            [/[^\"'\\#\\\\]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/#{/, {\r\n                    cases: {\r\n                        '$S2==\"': { token: 'string', next: 'root.interpolatedstring' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/#/, 'string']\r\n        ],\r\n        herestring: [\r\n            [/(\"\"\"|''')/, {\r\n                    cases: {\r\n                        '$1==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/[^#\\\\'\"]+/, 'string'],\r\n            [/['\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/#{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\r\n            [/#/, 'string']\r\n        ],\r\n        comment: [\r\n            [/[^#]+/, 'comment',],\r\n            [/###/, 'comment', '@pop'],\r\n            [/#/, 'comment'],\r\n        ],\r\n        hereregexp: [\r\n            [/[^\\\\\\/#]+/, 'regexp'],\r\n            [/\\\\./, 'regexp'],\r\n            [/#.*$/, 'comment'],\r\n            ['///[igm]*', { token: 'regexp', next: '@pop' }],\r\n            [/\\//, 'regexp'],\r\n        ],\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.js"],"sourceRoot":""}