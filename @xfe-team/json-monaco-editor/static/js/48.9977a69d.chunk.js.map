{"version":3,"sources":["../static/js/48.9977a69d.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/go/go.js"],"names":["webpackJsonp","1325","module","__webpack_exports__","__webpack_require__","conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","language","defaultToken","tokenPostfix","keywords","operators","symbols","escapes","tokenizer","root","cases","token","include","whitespace","comment","doccomment","string","rawstring"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLA,2HAKO,IAAIC,IACPC,UACIC,YAAa,KACbC,cAAe,KAAM,OAEzBC,WACK,IAAK,MACL,IAAK,MACL,IAAK,MAEVC,mBACMC,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,IAAKC,OAAQ,YAC/BF,KAAM,IAAKC,MAAO,IAAKC,OAAQ,YAC/BF,KAAM,IAAMC,MAAO,IAAMC,OAAQ,SAAU,aAEjDC,mBACMH,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAMC,MAAO,OAGlBG,GACPC,aAAc,GACdC,aAAc,MACdC,UACI,QACA,OACA,OACA,QACA,WACA,UACA,QACA,OACA,cACA,MACA,OACA,KACA,OACA,KACA,SACA,YACA,MACA,UACA,QACA,SACA,SACA,SACA,SACA,OACA,MACA,OACA,OACA,QACA,QACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,UACA,UACA,YACA,aACA,OACA,OACA,OACA,MACA,UACA,SACA,OAEJC,WACI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KACpD,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,MAC9D,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MAChF,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAGhDC,QAAS,wBACTC,QAAS,wEAETC,WACIC,OAEK,gBACOC,OACI,aAAeC,MAAO,cACtB,WAAY,iBAItBC,QAAS,gBAEV,aAAc,eAEd,WAAY,YAEZ,aAAc,cACd,mBAAoB,cACpB,YACOF,OACI,aAAc,YACd,WAAY,OAIvB,yBAA0B,iBAC1B,2BAA4B,iBAC5B,gCAAiC,eACjC,gBAAiB,iBACjB,oBAAqB,kBACrB,WAAY,WACZ,KAAM,WAEN,QAAS,cAET,kBAAmB,mBACnB,IAAK,SAAU,YACf,IAAK,SAAU,eAEf,WAAY,WACZ,oBAAqB,SAAU,gBAAiB,YAChD,IAAK,mBAEVG,aACK,aAAc,KACd,eAAgB,cAAe,gBAC/B,OAAQ,UAAW,aACnB,UAAW,YAEhBC,UACK,UAAW,YAGX,OAAQ,UAAW,SACnB,QAAS,YAGdC,aACK,UAAW,gBAEX,OAAQ,wBACR,OAAQ,cAAe,SACvB,QAAS,gBAEdC,SACK,UAAW,WACX,WAAY,kBACZ,MAAO,0BACP,IAAK,SAAU,SAEpBC,YACK,QAAS,WACT,IAAK,SAAU","file":"static/js/48.9977a69d.chunk.js","sourcesContent":["webpackJsonp([48],{\n\n/***/ 1325:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/var conf={comments:{lineComment:'//',blockComment:['/*','*/']},brackets:[['{','}'],['[',']'],['(',')']],autoClosingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'`',close:'`',notIn:['string']},{open:'\"',close:'\"',notIn:['string']},{open:'\\'',close:'\\'',notIn:['string','comment']}],surroundingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'`',close:'`'},{open:'\"',close:'\"'},{open:'\\'',close:'\\''}]};var language={defaultToken:'',tokenPostfix:'.go',keywords:['break','case','chan','const','continue','default','defer','else','fallthrough','for','func','go','goto','if','import','interface','map','package','range','return','select','struct','switch','type','var','bool','true','false','uint8','uint16','uint32','uint64','int8','int16','int32','int64','float32','float64','complex64','complex128','byte','rune','uint','int','uintptr','string','nil'],operators:['+','-','*','/','%','&','|','^','<<','>>','&^','+=','-=','*=','/=','%=','&=','|=','^=','<<=','>>=','&^=','&&','||','<-','++','--','==','<','>','=','!','!=','<=','>=',':=','...','(',')','',']','{','}',',',';','.',':'],// we include these common regular expressions\nsymbols:/[=><!~?:&|+\\-*\\/\\^%]+/,escapes:/\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,// The main tokenizer for our languages\ntokenizer:{root:[// identifiers and keywords\n[/[a-zA-Z_]\\w*/,{cases:{'@keywords':{token:'keyword.$0'},'@default':'identifier'}}],// whitespace\n{include:'@whitespace'},// [[ attributes ]].\n[/\\[\\[.*\\]\\]/,'annotation'],// Preprocessor directive\n[/^\\s*#\\w+/,'keyword'],// delimiters and operators\n[/[{}()\\[\\]]/,'@brackets'],[/[<>](?!@symbols)/,'@brackets'],[/@symbols/,{cases:{'@operators':'delimiter','@default':''}}],// numbers\n[/\\d*\\d+[eE]([\\-+]?\\d+)?/,'number.float'],[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/,'number.float'],[/0[xX][0-9a-fA-F']*[0-9a-fA-F]/,'number.hex'],[/0[0-7']*[0-7]/,'number.octal'],[/0[bB][0-1']*[0-1]/,'number.binary'],[/\\d[\\d']*/,'number'],[/\\d/,'number'],// delimiter: after number because of .\\d floats\n[/[;,.]/,'delimiter'],// strings\n[/\"([^\"\\\\]|\\\\.)*$/,'string.invalid'],[/\"/,'string','@string'],[/`/,\"string\",\"@rawstring\"],// characters\n[/'[^\\\\']'/,'string'],[/(')(@escapes)(')/,['string','string.escape','string']],[/'/,'string.invalid']],whitespace:[[/[ \\t\\r\\n]+/,''],[/\\/\\*\\*(?!\\/)/,'comment.doc','@doccomment'],[/\\/\\*/,'comment','@comment'],[/\\/\\/.*$/,'comment']],comment:[[/[^\\/*]+/,'comment'],// [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\n// [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\n[/\\*\\//,'comment','@pop'],[/[\\/*]/,'comment']],//Identical copy of comment above, except for the addition of .doc\ndoccomment:[[/[^\\/*]+/,'comment.doc'],// [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\n[/\\/\\*/,'comment.doc.invalid'],[/\\*\\//,'comment.doc','@pop'],[/[\\/*]/,'comment.doc']],string:[[/[^\\\\\"]+/,'string'],[/@escapes/,'string.escape'],[/\\\\./,'string.escape.invalid'],[/\"/,'string','@pop']],rawstring:[[/[^\\`]/,\"string\"],[/`/,\"string\",\"@pop\"]]}};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/48.9977a69d.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '`', close: '`', notIn: ['string'] },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '`', close: '`' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.go',\r\n    keywords: [\r\n        'break',\r\n        'case',\r\n        'chan',\r\n        'const',\r\n        'continue',\r\n        'default',\r\n        'defer',\r\n        'else',\r\n        'fallthrough',\r\n        'for',\r\n        'func',\r\n        'go',\r\n        'goto',\r\n        'if',\r\n        'import',\r\n        'interface',\r\n        'map',\r\n        'package',\r\n        'range',\r\n        'return',\r\n        'select',\r\n        'struct',\r\n        'switch',\r\n        'type',\r\n        'var',\r\n        'bool',\r\n        'true',\r\n        'false',\r\n        'uint8',\r\n        'uint16',\r\n        'uint32',\r\n        'uint64',\r\n        'int8',\r\n        'int16',\r\n        'int32',\r\n        'int64',\r\n        'float32',\r\n        'float64',\r\n        'complex64',\r\n        'complex128',\r\n        'byte',\r\n        'rune',\r\n        'uint',\r\n        'int',\r\n        'uintptr',\r\n        'string',\r\n        'nil',\r\n    ],\r\n    operators: [\r\n        '+', '-', '*', '/', '%', '&', '|', '^', '<<', '>>', '&^',\r\n        '+=', '-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>=', '&^=',\r\n        '&&', '||', '<-', '++', '--', '==', '<', '>', '=', '!', '!=', '<=', '>=', ':=', '...',\r\n        '(', ')', '', ']', '{', '}', ',', ';', '.', ':'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // [[ attributes ]].\r\n            [/\\[\\[.*\\]\\]/, 'annotation'],\r\n            // Preprocessor directive\r\n            [/^\\s*#\\w+/, 'keyword'],\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, 'number.hex'],\r\n            [/0[0-7']*[0-7]/, 'number.octal'],\r\n            [/0[bB][0-1']*[0-1]/, 'number.binary'],\r\n            [/\\d[\\d']*/, 'number'],\r\n            [/\\d/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, 'string', '@string'],\r\n            [/`/, \"string\", \"@rawstring\"],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@doccomment'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n            // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        //Identical copy of comment above, except for the addition of .doc\r\n        doccomment: [\r\n            [/[^\\/*]+/, 'comment.doc'],\r\n            // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n            [/\\/\\*/, 'comment.doc.invalid'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/[\\/*]/, 'comment.doc']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, 'string', '@pop']\r\n        ],\r\n        rawstring: [\r\n            [/[^\\`]/, \"string\"],\r\n            [/`/, \"string\", \"@pop\"]\r\n        ],\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/go/go.js"],"sourceRoot":""}