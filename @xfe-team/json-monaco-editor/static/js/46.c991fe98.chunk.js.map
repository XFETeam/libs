{"version":3,"sources":["../static/js/46.c991fe98.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.js"],"names":["webpackJsonp","1327","module","__webpack_exports__","__webpack_require__","_monaco","monaco","self","EMPTY_ELEMENTS","conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","join","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","language","defaultToken","tokenPostfix","tokenizer","root","token","switchTo","next","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded","handlebarsInSimpleState","include","handlebarsInEmbeddedState","handlebarsRoot"],"mappings":"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","file":"static/js/46.c991fe98.chunk.js","sourcesContent":["webpackJsonp([46],{\n\n/***/ 1327:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/// Allow for running under nodejs/requirejs in tests\nvar _monaco=typeof monaco==='undefined'?self.monaco:monaco;var EMPTY_ELEMENTS=['area','base','br','col','embed','hr','img','input','keygen','link','menuitem','meta','param','source','track','wbr'];var conf={wordPattern:/(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,comments:{blockComment:['{{!--','--}}']},brackets:[['<!--','-->'],['<','>'],['{{','}}'],['{','}'],['(',')']],autoClosingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\"',close:'\"'},{open:'\\'',close:'\\''}],surroundingPairs:[{open:'<',close:'>'},{open:'\"',close:'\"'},{open:'\\'',close:'\\''}],onEnterRules:[{beforeText:new RegExp(\"<(?!(?:\"+EMPTY_ELEMENTS.join('|')+\"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\",'i'),afterText:/^<\\/(\\w[\\w\\d]*)\\s*>$/i,action:{indentAction:_monaco.languages.IndentAction.IndentOutdent}},{beforeText:new RegExp(\"<(?!(?:\"+EMPTY_ELEMENTS.join('|')+\"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\",'i'),action:{indentAction:_monaco.languages.IndentAction.Indent}}]};var language={defaultToken:'',tokenPostfix:'',// ignoreCase: true,\n// The main tokenizer for our languages\ntokenizer:{root:[[/\\{\\{/,{token:'@rematch',switchTo:'@handlebarsInSimpleState.root'}],[/<!DOCTYPE/,'metatag.html','@doctype'],[/<!--/,'comment.html','@comment'],[/(<)(\\w+)(\\/>)/,['delimiter.html','tag.html','delimiter.html']],[/(<)(script)/,['delimiter.html',{token:'tag.html',next:'@script'}]],[/(<)(style)/,['delimiter.html',{token:'tag.html',next:'@style'}]],[/(<)([:\\w]+)/,['delimiter.html',{token:'tag.html',next:'@otherTag'}]],[/(<\\/)(\\w+)/,['delimiter.html',{token:'tag.html',next:'@otherTag'}]],[/</,'delimiter.html'],[/\\{/,'delimiter.html'],[/[^<{]+/]// text\n],doctype:[[/\\{\\{/,{token:'@rematch',switchTo:'@handlebarsInSimpleState.comment'}],[/[^>]+/,'metatag.content.html'],[/>/,'metatag.html','@pop']],comment:[[/\\{\\{/,{token:'@rematch',switchTo:'@handlebarsInSimpleState.comment'}],[/-->/,'comment.html','@pop'],[/[^-]+/,'comment.content.html'],[/./,'comment.content.html']],otherTag:[[/\\{\\{/,{token:'@rematch',switchTo:'@handlebarsInSimpleState.otherTag'}],[/\\/?>/,'delimiter.html','@pop'],[/\"([^\"]*)\"/,'attribute.value'],[/'([^']*)'/,'attribute.value'],[/[\\w\\-]+/,'attribute.name'],[/=/,'delimiter'],[/[ \\t\\r\\n]+/]],// -- BEGIN <script> tags handling\n// After <script\nscript:[[/\\{\\{/,{token:'@rematch',switchTo:'@handlebarsInSimpleState.script'}],[/type/,'attribute.name','@scriptAfterType'],[/\"([^\"]*)\"/,'attribute.value'],[/'([^']*)'/,'attribute.value'],[/[\\w\\-]+/,'attribute.name'],[/=/,'delimiter'],[/>/,{token:'delimiter.html',next:'@scriptEmbedded.text/javascript',nextEmbedded:'text/javascript'}],[/[ \\t\\r\\n]+/],[/(<\\/)(script\\s*)(>)/,['delimiter.html','tag.html',{token:'delimiter.html',next:'@pop'}]]],// After <script ... type\nscriptAfterType:[[/\\{\\{/,{token:'@rematch',switchTo:'@handlebarsInSimpleState.scriptAfterType'}],[/=/,'delimiter','@scriptAfterTypeEquals'],[/>/,{token:'delimiter.html',next:'@scriptEmbedded.text/javascript',nextEmbedded:'text/javascript'}],[/[ \\t\\r\\n]+/],[/<\\/script\\s*>/,{token:'@rematch',next:'@pop'}]],// After <script ... type =\nscriptAfterTypeEquals:[[/\\{\\{/,{token:'@rematch',switchTo:'@handlebarsInSimpleState.scriptAfterTypeEquals'}],[/\"([^\"]*)\"/,{token:'attribute.value',switchTo:'@scriptWithCustomType.$1'}],[/'([^']*)'/,{token:'attribute.value',switchTo:'@scriptWithCustomType.$1'}],[/>/,{token:'delimiter.html',next:'@scriptEmbedded.text/javascript',nextEmbedded:'text/javascript'}],[/[ \\t\\r\\n]+/],[/<\\/script\\s*>/,{token:'@rematch',next:'@pop'}]],// After <script ... type = $S2\nscriptWithCustomType:[[/\\{\\{/,{token:'@rematch',switchTo:'@handlebarsInSimpleState.scriptWithCustomType.$S2'}],[/>/,{token:'delimiter.html',next:'@scriptEmbedded.$S2',nextEmbedded:'$S2'}],[/\"([^\"]*)\"/,'attribute.value'],[/'([^']*)'/,'attribute.value'],[/[\\w\\-]+/,'attribute.name'],[/=/,'delimiter'],[/[ \\t\\r\\n]+/],[/<\\/script\\s*>/,{token:'@rematch',next:'@pop'}]],scriptEmbedded:[[/\\{\\{/,{token:'@rematch',switchTo:'@handlebarsInEmbeddedState.scriptEmbedded.$S2',nextEmbedded:'@pop'}],[/<\\/script/,{token:'@rematch',next:'@pop',nextEmbedded:'@pop'}]],// -- END <script> tags handling\n// -- BEGIN <style> tags handling\n// After <style\nstyle:[[/\\{\\{/,{token:'@rematch',switchTo:'@handlebarsInSimpleState.style'}],[/type/,'attribute.name','@styleAfterType'],[/\"([^\"]*)\"/,'attribute.value'],[/'([^']*)'/,'attribute.value'],[/[\\w\\-]+/,'attribute.name'],[/=/,'delimiter'],[/>/,{token:'delimiter.html',next:'@styleEmbedded.text/css',nextEmbedded:'text/css'}],[/[ \\t\\r\\n]+/],[/(<\\/)(style\\s*)(>)/,['delimiter.html','tag.html',{token:'delimiter.html',next:'@pop'}]]],// After <style ... type\nstyleAfterType:[[/\\{\\{/,{token:'@rematch',switchTo:'@handlebarsInSimpleState.styleAfterType'}],[/=/,'delimiter','@styleAfterTypeEquals'],[/>/,{token:'delimiter.html',next:'@styleEmbedded.text/css',nextEmbedded:'text/css'}],[/[ \\t\\r\\n]+/],[/<\\/style\\s*>/,{token:'@rematch',next:'@pop'}]],// After <style ... type =\nstyleAfterTypeEquals:[[/\\{\\{/,{token:'@rematch',switchTo:'@handlebarsInSimpleState.styleAfterTypeEquals'}],[/\"([^\"]*)\"/,{token:'attribute.value',switchTo:'@styleWithCustomType.$1'}],[/'([^']*)'/,{token:'attribute.value',switchTo:'@styleWithCustomType.$1'}],[/>/,{token:'delimiter.html',next:'@styleEmbedded.text/css',nextEmbedded:'text/css'}],[/[ \\t\\r\\n]+/],[/<\\/style\\s*>/,{token:'@rematch',next:'@pop'}]],// After <style ... type = $S2\nstyleWithCustomType:[[/\\{\\{/,{token:'@rematch',switchTo:'@handlebarsInSimpleState.styleWithCustomType.$S2'}],[/>/,{token:'delimiter.html',next:'@styleEmbedded.$S2',nextEmbedded:'$S2'}],[/\"([^\"]*)\"/,'attribute.value'],[/'([^']*)'/,'attribute.value'],[/[\\w\\-]+/,'attribute.name'],[/=/,'delimiter'],[/[ \\t\\r\\n]+/],[/<\\/style\\s*>/,{token:'@rematch',next:'@pop'}]],styleEmbedded:[[/\\{\\{/,{token:'@rematch',switchTo:'@handlebarsInEmbeddedState.styleEmbedded.$S2',nextEmbedded:'@pop'}],[/<\\/style/,{token:'@rematch',next:'@pop',nextEmbedded:'@pop'}]],// -- END <style> tags handling\nhandlebarsInSimpleState:[[/\\{\\{\\{?/,'delimiter.handlebars'],[/\\}\\}\\}?/,{token:'delimiter.handlebars',switchTo:'@$S2.$S3'}],{include:'handlebarsRoot'}],handlebarsInEmbeddedState:[[/\\{\\{\\{?/,'delimiter.handlebars'],[/\\}\\}\\}?/,{token:'delimiter.handlebars',switchTo:'@$S2.$S3',nextEmbedded:'$S3'}],{include:'handlebarsRoot'}],handlebarsRoot:[[/\"[^\"]*\"/,'string.handlebars'],[/[#/][^\\s}]+/,'keyword.helper.handlebars'],[/else\\b/,'keyword.helper.handlebars'],[/[\\s]+/],[/[^}]/,'variable.parameter.handlebars']]}};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/46.c991fe98.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n// Allow for running under nodejs/requirejs in tests\r\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\r\nvar EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\r\n    comments: {\r\n        blockComment: ['{{!--', '--}}']\r\n    },\r\n    brackets: [\r\n        ['<!--', '-->'],\r\n        ['<', '>'],\r\n        ['{{', '}}'],\r\n        ['{', '}'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '<', close: '>' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' }\r\n    ],\r\n    onEnterRules: [\r\n        {\r\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n            afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\r\n            action: { indentAction: _monaco.languages.IndentAction.IndentOutdent }\r\n        },\r\n        {\r\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n            action: { indentAction: _monaco.languages.IndentAction.Indent }\r\n        }\r\n    ],\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '',\r\n    // ignoreCase: true,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.root' }],\r\n            [/<!DOCTYPE/, 'metatag.html', '@doctype'],\r\n            [/<!--/, 'comment.html', '@comment'],\r\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\r\n            [/(<)(script)/, ['delimiter.html', { token: 'tag.html', next: '@script' }]],\r\n            [/(<)(style)/, ['delimiter.html', { token: 'tag.html', next: '@style' }]],\r\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\r\n            [/(<\\/)(\\w+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\r\n            [/</, 'delimiter.html'],\r\n            [/\\{/, 'delimiter.html'],\r\n            [/[^<{]+/] // text\r\n        ],\r\n        doctype: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.comment' }],\r\n            [/[^>]+/, 'metatag.content.html'],\r\n            [/>/, 'metatag.html', '@pop'],\r\n        ],\r\n        comment: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.comment' }],\r\n            [/-->/, 'comment.html', '@pop'],\r\n            [/[^-]+/, 'comment.content.html'],\r\n            [/./, 'comment.content.html']\r\n        ],\r\n        otherTag: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.otherTag' }],\r\n            [/\\/?>/, 'delimiter.html', '@pop'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n        ],\r\n        // -- BEGIN <script> tags handling\r\n        // After <script\r\n        script: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.script' }],\r\n            [/type/, 'attribute.name', '@scriptAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\r\n        ],\r\n        // After <script ... type\r\n        scriptAfterType: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.scriptAfterType' }],\r\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type =\r\n        scriptAfterTypeEquals: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.scriptAfterTypeEquals' }],\r\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\r\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type = $S2\r\n        scriptWithCustomType: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.scriptWithCustomType.$S2' }],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.$S2', nextEmbedded: '$S2' }],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        scriptEmbedded: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInEmbeddedState.scriptEmbedded.$S2', nextEmbedded: '@pop' }],\r\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\r\n        ],\r\n        // -- END <script> tags handling\r\n        // -- BEGIN <style> tags handling\r\n        // After <style\r\n        style: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.style' }],\r\n            [/type/, 'attribute.name', '@styleAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\r\n        ],\r\n        // After <style ... type\r\n        styleAfterType: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.styleAfterType' }],\r\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type =\r\n        styleAfterTypeEquals: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.styleAfterTypeEquals' }],\r\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\r\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type = $S2\r\n        styleWithCustomType: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.styleWithCustomType.$S2' }],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.$S2', nextEmbedded: '$S2' }],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        styleEmbedded: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInEmbeddedState.styleEmbedded.$S2', nextEmbedded: '@pop' }],\r\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\r\n        ],\r\n        // -- END <style> tags handling\r\n        handlebarsInSimpleState: [\r\n            [/\\{\\{\\{?/, 'delimiter.handlebars'],\r\n            [/\\}\\}\\}?/, { token: 'delimiter.handlebars', switchTo: '@$S2.$S3' }],\r\n            { include: 'handlebarsRoot' }\r\n        ],\r\n        handlebarsInEmbeddedState: [\r\n            [/\\{\\{\\{?/, 'delimiter.handlebars'],\r\n            [/\\}\\}\\}?/, { token: 'delimiter.handlebars', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\r\n            { include: 'handlebarsRoot' }\r\n        ],\r\n        handlebarsRoot: [\r\n            [/\"[^\"]*\"/, 'string.handlebars'],\r\n            [/[#/][^\\s}]+/, 'keyword.helper.handlebars'],\r\n            [/else\\b/, 'keyword.helper.handlebars'],\r\n            [/[\\s]+/],\r\n            [/[^}]/, 'variable.parameter.handlebars'],\r\n        ],\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.js"],"sourceRoot":""}