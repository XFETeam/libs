{"version":3,"sources":["../static/js/15.2a9729d4.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/sophia/sophia.js"],"names":["webpackJsonp","1366","module","__webpack_exports__","__webpack_require__","conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","language","defaultToken","tokenPostfix","token","keywords","operators","symbols","escapes","integersuffix","floatsuffix","tokenizer","root","cases","include","whitespace","comment","doccomment","string"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLA,2HAKO,IAAIC,IACPC,UACIC,YAAa,KACbC,cAAe,KAAM,OAEzBC,WAAY,IAAK,MAAO,IAAK,MAAO,IAAK,MAAO,IAAK,MACrDC,mBACMC,KAAM,IAAKC,MAAO,IAAKC,OAAQ,SAAU,aACzCF,KAAM,IAAKC,MAAO,IAAKC,OAAQ,SAAU,aACzCF,KAAM,IAAKC,MAAO,IAAKC,OAAQ,SAAU,aACzCF,KAAM,IAAKC,MAAO,IAAKC,OAAQ,SAAU,cAGxCC,GACPC,aAAc,GACdC,aAAc,OACdP,WACMQ,MAAO,kBAAmBN,KAAM,IAAKC,MAAO,MAC5CK,MAAO,wBAAyBN,KAAM,IAAKC,MAAO,MAClDK,MAAO,mBAAoBN,KAAM,IAAKC,MAAO,MAC7CK,MAAO,kBAAmBN,KAAM,IAAKC,MAAO,MAElDM,UAEI,WACA,UACA,aACA,WACA,WACA,QACA,OACA,YACA,QACA,OACA,UACA,SACA,OACA,MACA,SACA,WACA,OACA,SACA,SACA,eACA,OACA,OACA,QACA,SACA,SACA,SACA,UACA,OACA,QACA,OACA,OACA,OACA,QACA,QACA,MACA,MACA,UACA,SACA,OACA,QACA,MACA,KACA,OACA,SAEJC,WACI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IACpC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxC,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAC3C,KAAM,KAAM,MAAO,MAAO,QAG9BC,QAAS,wBACTC,QAAS,wEACTC,cAAe,mCACfC,YAAa,UAEbC,WACIC,OAEK,gBACOC,OACI,aAAeT,MAAO,cACtB,WAAY,iBAItBU,QAAS,gBAEV,aAAc,eAEd,WAAY,YAEZ,SAAU,YAEV,aAAc,cACd,mBAAoB,cACpB,YACOD,OACI,aAAc,YACd,WAAY,OAIvB,uCAAwC,iBACxC,yCAA0C,iBAC1C,gDAAiD,eACjD,gCAAiC,iBACjC,oCAAqC,kBACrC,6BAA8B,WAC9B,qBAAsB,WAEtB,QAAS,cAET,kBAAmB,mBACnB,IAAK,SAAU,YAEf,WAAY,WACZ,oBAAqB,SAAU,gBAAiB,YAChD,IAAK,mBAEVE,aACK,aAAc,KACd,eAAgB,cAAe,gBAC/B,OAAQ,UAAW,aACnB,UAAW,YAEhBC,UACK,UAAW,YACX,OAAQ,UAAW,SACnB,QAAS,YAGdC,aACK,UAAW,gBACX,OAAQ,cAAe,SACvB,QAAS,gBAEdC,SACK,UAAW,WACX,WAAY,kBACZ,MAAO,0BACP,IAAK,SAAU","file":"static/js/15.2a9729d4.chunk.js","sourcesContent":["webpackJsonp([15],{\n\n/***/ 1366:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/var conf={comments:{lineComment:'//',blockComment:['/*','*/']},brackets:[['{','}'],['[',']'],['(',')'],['<','>']],autoClosingPairs:[{open:'\"',close:'\"',notIn:['string','comment']},{open:'{',close:'}',notIn:['string','comment']},{open:'[',close:']',notIn:['string','comment']},{open:'(',close:')',notIn:['string','comment']}]};var language={defaultToken:'',tokenPostfix:'.aes',brackets:[{token:'delimiter.curly',open:'{',close:'}'},{token:'delimiter.parenthesis',open:'(',close:')'},{token:'delimiter.square',open:'[',close:']'},{token:'delimiter.angle',open:'<',close:'>'}],keywords:[// Main keywords\n'contract','library','entrypoint','function','stateful','state','hash','signature','tuple','list','address','string','bool','int','record','datatype','type','option','oracle','oracle_query','Call','Bits','Bytes','Oracle','String','Crypto','Address','Auth','Chain','None','Some','bits','bytes','event','let','map','private','public','true','false','var','if','else','throw'],operators:['=','>','<','!','~','?','::',':','==','<=','>=','!=','&&','||','++','--','+','-','*','/','&','|','^','%','<<','>>','>>>','+=','-=','*=','/=','&=','|=','^=','%=','<<=','>>=','>>>='],// we include these common regular expressions\nsymbols:/[=><!~?:&|+\\-*\\/\\^%]+/,escapes:/\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,integersuffix:/(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/,floatsuffix:/[fFlL]?/,// The main tokenizer for our languages\ntokenizer:{root:[// identifiers and keywords\n[/[a-zA-Z_]\\w*/,{cases:{'@keywords':{token:'keyword.$0'},'@default':'identifier'}}],// whitespace\n{include:'@whitespace'},// [[ attributes ]].\n[/\\[\\[.*\\]\\]/,'annotation'],// Preprocessor directive\n[/^\\s*#\\w+/,'keyword'],//DataTypes\n[/int\\d*/,'keyword'],// delimiters and operators\n[/[{}()\\[\\]]/,'@brackets'],[/[<>](?!@symbols)/,'@brackets'],[/@symbols/,{cases:{'@operators':'delimiter','@default':''}}],// numbers\n[/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/,'number.float'],[/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/,'number.float'],[/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/,'number.hex'],[/0[0-7']*[0-7](@integersuffix)/,'number.octal'],[/0[bB][0-1']*[0-1](@integersuffix)/,'number.binary'],[/\\d[\\d']*\\d(@integersuffix)/,'number'],[/\\d(@integersuffix)/,'number'],// delimiter: after number because of .\\d floats\n[/[;,.]/,'delimiter'],// strings\n[/\"([^\"\\\\]|\\\\.)*$/,'string.invalid'],[/\"/,'string','@string'],// characters\n[/'[^\\\\']'/,'string'],[/(')(@escapes)(')/,['string','string.escape','string']],[/'/,'string.invalid']],whitespace:[[/[ \\t\\r\\n]+/,''],[/\\/\\*\\*(?!\\/)/,'comment.doc','@doccomment'],[/\\/\\*/,'comment','@comment'],[/\\/\\/.*$/,'comment']],comment:[[/[^\\/*]+/,'comment'],[/\\*\\//,'comment','@pop'],[/[\\/*]/,'comment']],//Identical copy of comment above, except for the addition of .doc\ndoccomment:[[/[^\\/*]+/,'comment.doc'],[/\\*\\//,'comment.doc','@pop'],[/[\\/*]/,'comment.doc']],string:[[/[^\\\\\"]+/,'string'],[/@escapes/,'string.escape'],[/\\\\./,'string.escape.invalid'],[/\"/,'string','@pop']]}};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/15.2a9729d4.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [['{', '}'], ['[', ']'], ['(', ')'], ['<', '>']],\r\n    autoClosingPairs: [\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.aes',\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' },\r\n        { token: 'delimiter.angle', open: '<', close: '>' }\r\n    ],\r\n    keywords: [\r\n        // Main keywords\r\n        'contract',\r\n        'library',\r\n        'entrypoint',\r\n        'function',\r\n        'stateful',\r\n        'state',\r\n        'hash',\r\n        'signature',\r\n        'tuple',\r\n        'list',\r\n        'address',\r\n        'string',\r\n        'bool',\r\n        'int',\r\n        'record',\r\n        'datatype',\r\n        'type',\r\n        'option',\r\n        'oracle',\r\n        'oracle_query',\r\n        'Call',\r\n        'Bits',\r\n        'Bytes',\r\n        'Oracle',\r\n        'String',\r\n        'Crypto',\r\n        'Address',\r\n        'Auth',\r\n        'Chain',\r\n        'None',\r\n        'Some',\r\n        'bits',\r\n        'bytes',\r\n        'event',\r\n        'let',\r\n        'map',\r\n        'private',\r\n        'public',\r\n        'true',\r\n        'false',\r\n        'var',\r\n        'if',\r\n        'else',\r\n        'throw'\r\n    ],\r\n    operators: [\r\n        '=', '>', '<', '!', '~', '?', '::', ':',\r\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n        '^=', '%=', '<<=', '>>=', '>>>='\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    integersuffix: /(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/,\r\n    floatsuffix: /[fFlL]?/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // [[ attributes ]].\r\n            [/\\[\\[.*\\]\\]/, 'annotation'],\r\n            // Preprocessor directive\r\n            [/^\\s*#\\w+/, 'keyword'],\r\n            //DataTypes\r\n            [/int\\d*/, 'keyword'],\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, 'number.hex'],\r\n            [/0[0-7']*[0-7](@integersuffix)/, 'number.octal'],\r\n            [/0[bB][0-1']*[0-1](@integersuffix)/, 'number.binary'],\r\n            [/\\d[\\d']*\\d(@integersuffix)/, 'number'],\r\n            [/\\d(@integersuffix)/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, 'string', '@string'],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@doccomment'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        //Identical copy of comment above, except for the addition of .doc\r\n        doccomment: [\r\n            [/[^\\/*]+/, 'comment.doc'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/[\\/*]/, 'comment.doc']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, 'string', '@pop']\r\n        ],\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/sophia/sophia.js"],"sourceRoot":""}