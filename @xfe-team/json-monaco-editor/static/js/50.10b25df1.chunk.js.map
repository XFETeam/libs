{"version":3,"sources":["../static/js/50.10b25df1.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.js"],"names":["webpackJsonp","1328","module","__webpack_exports__","__webpack_require__","conf","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","offSide","language","defaultToken","tokenPostfix","keywords","typeKeywords","directiveLocations","operators","symbols","escapes","tokenizer","root","cases","include","token","log","next","nextEmbedded","bracket","mlstring","string","whitespace"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLA,2HAKO,IAAIC,IACPC,UACIC,YAAa,KAEjBC,WACK,IAAK,MACL,IAAK,MACL,IAAK,MAEVC,mBACMC,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,MAAOC,MAAO,MAAOC,OAAQ,SAAU,aAC7CF,KAAM,IAAKC,MAAO,IAAKC,OAAQ,SAAU,aAE/CC,mBACMH,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,MAAOC,MAAO,QACpBD,KAAM,IAAKC,MAAO,MAExBG,SACIC,SAAS,IAGNC,GAEPC,aAAc,UACdC,aAAc,OACdC,UACI,OAAQ,OAAQ,QAChB,QAAS,WAAY,eACrB,SAAU,SAAU,YACpB,SAAU,OAAQ,YAAa,QAAS,OAAQ,QAAS,aACzD,WAAY,MAEhBC,cAAe,MAAO,QAAS,SAAU,UAAW,MACpDC,oBACI,SAAU,SAAU,SAAU,mBAAoB,sBAClD,YAAa,QAAS,OAAQ,aAAc,eAAgB,yBAC5D,QAAS,WAAY,eAAgB,QAAS,sBAC9C,kBAAmB,kBAAmB,uBAE1CC,WAAY,IAAK,IAAK,IAAK,IAAK,IAAK,KAErCC,QAAS,YAETC,QAAS,qCAETC,WACIC,OAGQ,gBAEIC,OACI,YAAa,UACb,WAAY,qBAMpB,aAEIA,OACI,YAAa,UACb,WAAY,0BAMpB,gBAEIA,OACI,gBAAiB,UACjB,WAAY,sBAKtBC,QAAS,gBAEV,aAAc,cAEX,YACED,OAAS,aAAc,WAAY,WAAY,OAMjD,0BACEE,MAAO,aAAcC,IAAK,0BAG/B,2BAA4B,iBAC5B,oBAAqB,eACrB,MAAO,WAEP,QAAS,cACT,OACKD,MAAO,SAAUE,KAAM,YAAaC,aAAc,cAGvD,kBAAmB,mBACnB,KAAOH,MAAO,eAAgBI,QAAS,QAASF,KAAM,aAE3DG,WACK,QAAS,WACT,OAASL,MAAO,SAAUE,KAAM,OAAQC,aAAc,UAE3DG,SACK,UAAW,WACX,WAAY,kBACZ,MAAO,0BACP,KAAON,MAAO,eAAgBI,QAAS,SAAUF,KAAM,UAE5DK,aAAc,aAAc,KAAM,OAAQ","file":"static/js/50.10b25df1.chunk.js","sourcesContent":["webpackJsonp([50],{\n\n/***/ 1328:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/var conf={comments:{lineComment:'#'},brackets:[['{','}'],['[',']'],['(',')']],autoClosingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\"\"\"',close:'\"\"\"',notIn:['string','comment']},{open:'\"',close:'\"',notIn:['string','comment']}],surroundingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\"\"\"',close:'\"\"\"'},{open:'\"',close:'\"'}],folding:{offSide:true}};var language={// Set defaultToken to invalid to see what you do not tokenize yet\ndefaultToken:'invalid',tokenPostfix:'.gql',keywords:['null','true','false','query','mutation','subscription','extend','schema','directive','scalar','type','interface','union','enum','input','implements','fragment','on'],typeKeywords:['Int','Float','String','Boolean','ID'],directiveLocations:['SCHEMA','SCALAR','OBJECT','FIELD_DEFINITION','ARGUMENT_DEFINITION','INTERFACE','UNION','ENUM','ENUM_VALUE','INPUT_OBJECT','INPUT_FIELD_DEFINITION','QUERY','MUTATION','SUBSCRIPTION','FIELD','FRAGMENT_DEFINITION','FRAGMENT_SPREAD','INLINE_FRAGMENT','VARIABLE_DEFINITION'],operators:['=','!','?',':','&','|'],// we include these common regular expressions\nsymbols:/[=!?:&|]+/,// https://facebook.github.io/graphql/draft/#sec-String-Value\nescapes:/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9A-Fa-f]{4})/,// The main tokenizer for our languages\ntokenizer:{root:[// fields and argument names\n[/[a-z_][\\w$]*/,{cases:{'@keywords':'keyword','@default':'key.identifier'}}],// identify typed input variables\n[/[$][\\w$]*/,{cases:{'@keywords':'keyword','@default':'argument.identifier'}}],// to show class names nicely\n[/[A-Z][\\w\\$]*/,{cases:{'@typeKeywords':'keyword','@default':'type.identifier'}}],// whitespace\n{include:'@whitespace'},// delimiters and operators\n[/[{}()\\[\\]]/,'@brackets'],[/@symbols/,{cases:{'@operators':'operator','@default':''}}],// @ annotations.\n// As an example, we emit a debugging log message on these tokens.\n// Note: message are supressed during the first load -- change some lines to see them.\n[/@\\s*[a-zA-Z_\\$][\\w\\$]*/,{token:'annotation',log:'annotation token: $0'}],// numbers\n[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/,'number.float'],[/0[xX][0-9a-fA-F]+/,'number.hex'],[/\\d+/,'number'],// delimiter: after number because of .\\d floats\n[/[;,.]/,'delimiter'],[/\"\"\"/,{token:'string',next:'@mlstring',nextEmbedded:'markdown'}],// strings\n[/\"([^\"\\\\]|\\\\.)*$/,'string.invalid'],[/\"/,{token:'string.quote',bracket:'@open',next:'@string'}]],mlstring:[[/[^\"]+/,'string'],['\"\"\"',{token:'string',next:'@pop',nextEmbedded:'@pop'}]],string:[[/[^\\\\\"]+/,'string'],[/@escapes/,'string.escape'],[/\\\\./,'string.escape.invalid'],[/\"/,{token:'string.quote',bracket:'@close',next:'@pop'}]],whitespace:[[/[ \\t\\r\\n]+/,''],[/#.*$/,'comment']]}};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/50.10b25df1.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '#'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"\"\"', close: '\"\"\"', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"\"\"', close: '\"\"\"' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n    folding: {\r\n        offSide: true\r\n    }\r\n};\r\nexport var language = {\r\n    // Set defaultToken to invalid to see what you do not tokenize yet\r\n    defaultToken: 'invalid',\r\n    tokenPostfix: '.gql',\r\n    keywords: [\r\n        'null', 'true', 'false',\r\n        'query', 'mutation', 'subscription',\r\n        'extend', 'schema', 'directive',\r\n        'scalar', 'type', 'interface', 'union', 'enum', 'input', 'implements',\r\n        'fragment', 'on',\r\n    ],\r\n    typeKeywords: ['Int', 'Float', 'String', 'Boolean', 'ID'],\r\n    directiveLocations: [\r\n        'SCHEMA', 'SCALAR', 'OBJECT', 'FIELD_DEFINITION', 'ARGUMENT_DEFINITION',\r\n        'INTERFACE', 'UNION', 'ENUM', 'ENUM_VALUE', 'INPUT_OBJECT', 'INPUT_FIELD_DEFINITION',\r\n        'QUERY', 'MUTATION', 'SUBSCRIPTION', 'FIELD', 'FRAGMENT_DEFINITION',\r\n        'FRAGMENT_SPREAD', 'INLINE_FRAGMENT', 'VARIABLE_DEFINITION',\r\n    ],\r\n    operators: ['=', '!', '?', ':', '&', '|'],\r\n    // we include these common regular expressions\r\n    symbols: /[=!?:&|]+/,\r\n    // https://facebook.github.io/graphql/draft/#sec-String-Value\r\n    escapes: /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9A-Fa-f]{4})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // fields and argument names\r\n            [\r\n                /[a-z_][\\w$]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'key.identifier',\r\n                    },\r\n                },\r\n            ],\r\n            // identify typed input variables\r\n            [\r\n                /[$][\\w$]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'argument.identifier',\r\n                    },\r\n                },\r\n            ],\r\n            // to show class names nicely\r\n            [\r\n                /[A-Z][\\w\\$]*/,\r\n                {\r\n                    cases: {\r\n                        '@typeKeywords': 'keyword',\r\n                        '@default': 'type.identifier',\r\n                    },\r\n                },\r\n            ],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [\r\n                /@symbols/,\r\n                { cases: { '@operators': 'operator', '@default': '' } },\r\n            ],\r\n            // @ annotations.\r\n            // As an example, we emit a debugging log message on these tokens.\r\n            // Note: message are supressed during the first load -- change some lines to see them.\r\n            [\r\n                /@\\s*[a-zA-Z_\\$][\\w\\$]*/,\r\n                { token: 'annotation', log: 'annotation token: $0' },\r\n            ],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\r\n            [/\\d+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            [/\"\"\"/,\r\n                { token: 'string', next: '@mlstring', nextEmbedded: 'markdown' }\r\n            ],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string' }],\r\n        ],\r\n        mlstring: [\r\n            [/[^\"]+/, 'string'],\r\n            ['\"\"\"', { token: 'string', next: '@pop', nextEmbedded: '@pop' }]\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }],\r\n        ],\r\n        whitespace: [[/[ \\t\\r\\n]+/, ''], [/#.*$/, 'comment']],\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.js"],"sourceRoot":""}