{"version":3,"sources":["../static/js/13.ada63264.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/st/st.js"],"names":["webpackJsonp","1368","module","__webpack_exports__","__webpack_require__","conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","constant","defineKeywords","typeKeywords","operators","builtinVariables","builtinFunctions","symbols","escapes","tokenizer","root","next","cases","include","bracket","params","comment","comment2","whitespace","string_dq","string_sq"],"mappings":"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","file":"static/js/13.ada63264.chunk.js","sourcesContent":["webpackJsonp([13],{\n\n/***/ 1368:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/var conf={comments:{lineComment:'//',blockComment:['(*','*)']},brackets:[['{','}'],['[',']'],['(',')'],['var','end_var'],['var_input','end_var'],['var_output','end_var'],['var_in_out','end_var'],['var_temp','end_var'],['var_global','end_var'],['var_access','end_var'],['var_external','end_var'],['type','end_type'],['struct','end_struct'],['program','end_program'],['function','end_function'],['function_block','end_function_block'],['action','end_action'],['step','end_step'],['initial_step','end_step'],['transaction','end_transaction'],['configuration','end_configuration'],['tcp','end_tcp'],['recource','end_recource'],['channel','end_channel'],['library','end_library'],['folder','end_folder'],['binaries','end_binaries'],['includes','end_includes'],['sources','end_sources']],autoClosingPairs:[{open:'[',close:']'},{open:'{',close:'}'},{open:'(',close:')'},{open:'/*',close:'*/'},{open:'\\'',close:'\\'',notIn:['string_sq']},{open:'\"',close:'\"',notIn:['string_dq']},{open:'var_input',close:'end_var'},{open:'var_output',close:'end_var'},{open:'var_in_out',close:'end_var'},{open:'var_temp',close:'end_var'},{open:'var_global',close:'end_var'},{open:'var_access',close:'end_var'},{open:'var_external',close:'end_var'},{open:'type',close:'end_type'},{open:'struct',close:'end_struct'},{open:'program',close:'end_program'},{open:'function',close:'end_function'},{open:'function_block',close:'end_function_block'},{open:'action',close:'end_action'},{open:'step',close:'end_step'},{open:'initial_step',close:'end_step'},{open:'transaction',close:'end_transaction'},{open:'configuration',close:'end_configuration'},{open:'tcp',close:'end_tcp'},{open:'recource',close:'end_recource'},{open:'channel',close:'end_channel'},{open:'library',close:'end_library'},{open:'folder',close:'end_folder'},{open:'binaries',close:'end_binaries'},{open:'includes',close:'end_includes'},{open:'sources',close:'end_sources'}],surroundingPairs:[{open:'{',close:'}'},{open:'[',close:']'},{open:'(',close:')'},{open:'\"',close:'\"'},{open:'\\'',close:'\\''},{open:'var',close:'end_var'},{open:'var_input',close:'end_var'},{open:'var_output',close:'end_var'},{open:'var_in_out',close:'end_var'},{open:'var_temp',close:'end_var'},{open:'var_global',close:'end_var'},{open:'var_access',close:'end_var'},{open:'var_external',close:'end_var'},{open:'type',close:'end_type'},{open:'struct',close:'end_struct'},{open:'program',close:'end_program'},{open:'function',close:'end_function'},{open:'function_block',close:'end_function_block'},{open:'action',close:'end_action'},{open:'step',close:'end_step'},{open:'initial_step',close:'end_step'},{open:'transaction',close:'end_transaction'},{open:'configuration',close:'end_configuration'},{open:'tcp',close:'end_tcp'},{open:'recource',close:'end_recource'},{open:'channel',close:'end_channel'},{open:'library',close:'end_library'},{open:'folder',close:'end_folder'},{open:'binaries',close:'end_binaries'},{open:'includes',close:'end_includes'},{open:'sources',close:'end_sources'}],folding:{markers:{start:new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),end:new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")}}};var language={defaultToken:'',tokenPostfix:'.st',ignoreCase:true,brackets:[{token:'delimiter.curly',open:'{',close:'}'},{token:'delimiter.parenthesis',open:'(',close:')'},{token:'delimiter.square',open:'[',close:']'}],keywords:['if','end_if','elsif','else','case','of','to','__try','__catch','__finally','do','with','by','while','repeat','end_while','end_repeat','end_case','for','end_for','task','retain','non_retain','constant','with','at','exit','return','interval','priority','address','port','on_channel','then','iec','file','uses','version','packagetype','displayname','copyright','summary','vendor','common_source','from','extends'],constant:['false','true','null'],defineKeywords:['var','var_input','var_output','var_in_out','var_temp','var_global','var_access','var_external','end_var','type','end_type','struct','end_struct','program','end_program','function','end_function','function_block','end_function_block','interface','end_interface','method','end_method','property','end_property','namespace','end_namespace','configuration','end_configuration','tcp','end_tcp','resource','end_resource','channel','end_channel','library','end_library','folder','end_folder','binaries','end_binaries','includes','end_includes','sources','end_sources','action','end_action','step','initial_step','end_step','transaction','end_transaction'],typeKeywords:['int','sint','dint','lint','usint','uint','udint','ulint','real','lreal','time','date','time_of_day','date_and_time','string','bool','byte','word','dword','array','pointer','lword'],operators:['=','>','<',':',':=','<=','>=','<>','&','+','-','*','**','MOD','^','or','and','not','xor','abs','acos','asin','atan','cos','exp','expt','ln','log','sin','sqrt','tan','sel','max','min','limit','mux','shl','shr','rol','ror','indexof','sizeof','adr','adrinst','bitadr','is_valid','ref','ref_to'],builtinVariables:[],builtinFunctions:['sr','rs','tp','ton','tof','eq','ge','le','lt','ne','round','trunc','ctd','сtu','ctud','r_trig','f_trig','move','concat','delete','find','insert','left','len','replace','right','rtc'],// we include these common regular expressions\nsymbols:/[=><!~?:&|+\\-*\\/\\^%]+/,// C# style strings\nescapes:/\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,// The main tokenizer for our languages\ntokenizer:{root:[[/(\\.\\.)/,'delimiter'],[/\\b(16#[0-9A-Fa-f\\_]*)+\\b/,'number.hex'],[/\\b(2#[01\\_]+)+\\b/,'number.binary'],[/\\b(8#[0-9\\_]*)+\\b/,'number.octal'],[/\\b\\d*\\.\\d+([eE][\\-+]?\\d+)?\\b/,'number.float'],[/\\b(L?REAL)#[0-9\\_\\.e]+\\b/,'number.float'],[/\\b(BYTE|(?:D|L)?WORD|U?(?:S|D|L)?INT)#[0-9\\_]+\\b/,'number'],[/\\d+/,'number'],[/\\b(T|DT|TOD)#[0-9:-_shmyd]+\\b/,'tag'],[/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]+/,'tag'],[/\\%(I|Q|M)[0-9\\.]*/,'tag'],[/\\b[A-Za-z]{1,6}#[0-9]+\\b/,'tag'],[/\\b(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]+\\b/,'predefined'],[/\\b[A_Za-z]+(_TO_)[A_Za-z]+\\b/,'predefined'],[/[;]/,'delimiter'],[/[.]/,{token:'delimiter',next:'@params'}],// identifiers and keywords\n[/[a-zA-Z_]\\w*/,{cases:{'@operators':'operators','@keywords':'keyword','@typeKeywords':'type','@defineKeywords':'variable','@constant':'constant','@builtinVariables':'predefined','@builtinFunctions':'predefined','@default':'identifier'}}],{include:'@whitespace'},[/[{}()\\[\\]]/,'@brackets'],[/\"([^\"\\\\]|\\\\.)*$/,'string.invalid'],[/\"/,{token:'string.quote',bracket:'@open',next:'@string_dq'}],[/'/,{token:'string.quote',bracket:'@open',next:'@string_sq'}],[/'[^\\\\']'/,'string'],[/(')(@escapes)(')/,['string','string.escape','string']],[/'/,'string.invalid']],params:[[/\\b[A-Za-z0-9_]+\\b(?=\\()/,{token:'identifier',next:'@pop'}],[/\\b[A-Za-z0-9_]+\\b/,'variable.name','@pop']],comment:[[/[^\\/*]+/,'comment'],[/\\/\\*/,'comment','@push'],[\"\\\\*/\",'comment','@pop'],[/[\\/*]/,'comment']],comment2:[[/[^\\(*]+/,'comment'],[/\\(\\*/,'comment','@push'],[\"\\\\*\\\\)\",'comment','@pop'],[/[\\(*]/,'comment']],whitespace:[[/[ \\t\\r\\n]+/,'white'],[/\\/\\/.*$/,'comment'],[/\\/\\*/,'comment','@comment'],[/\\(\\*/,'comment','@comment2']],string_dq:[[/[^\\\\\"]+/,'string'],[/@escapes/,'string.escape'],[/\\\\./,'string.escape.invalid'],[/\"/,{token:'string.quote',bracket:'@close',next:'@pop'}]],string_sq:[[/[^\\\\']+/,'string'],[/@escapes/,'string.escape'],[/\\\\./,'string.escape.invalid'],[/'/,{token:'string.quote',bracket:'@close',next:'@pop'}]]}};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/13.ada63264.chunk.js","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['(*', '*)'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n        ['var', 'end_var'],\r\n        ['var_input', 'end_var'],\r\n        ['var_output', 'end_var'],\r\n        ['var_in_out', 'end_var'],\r\n        ['var_temp', 'end_var'],\r\n        ['var_global', 'end_var'],\r\n        ['var_access', 'end_var'],\r\n        ['var_external', 'end_var'],\r\n        ['type', 'end_type'],\r\n        ['struct', 'end_struct'],\r\n        ['program', 'end_program'],\r\n        ['function', 'end_function'],\r\n        ['function_block', 'end_function_block'],\r\n        ['action', 'end_action'],\r\n        ['step', 'end_step'],\r\n        ['initial_step', 'end_step'],\r\n        ['transaction', 'end_transaction'],\r\n        ['configuration', 'end_configuration'],\r\n        ['tcp', 'end_tcp'],\r\n        ['recource', 'end_recource'],\r\n        ['channel', 'end_channel'],\r\n        ['library', 'end_library'],\r\n        ['folder', 'end_folder'],\r\n        ['binaries', 'end_binaries'],\r\n        ['includes', 'end_includes'],\r\n        ['sources', 'end_sources']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '[', close: ']' },\r\n        { open: '{', close: '}' },\r\n        { open: '(', close: ')' },\r\n        { open: '/*', close: '*/' },\r\n        { open: '\\'', close: '\\'', notIn: ['string_sq'] },\r\n        { open: '\"', close: '\"', notIn: ['string_dq'] },\r\n        { open: 'var_input', close: 'end_var' },\r\n        { open: 'var_output', close: 'end_var' },\r\n        { open: 'var_in_out', close: 'end_var' },\r\n        { open: 'var_temp', close: 'end_var' },\r\n        { open: 'var_global', close: 'end_var' },\r\n        { open: 'var_access', close: 'end_var' },\r\n        { open: 'var_external', close: 'end_var' },\r\n        { open: 'type', close: 'end_type' },\r\n        { open: 'struct', close: 'end_struct' },\r\n        { open: 'program', close: 'end_program' },\r\n        { open: 'function', close: 'end_function' },\r\n        { open: 'function_block', close: 'end_function_block' },\r\n        { open: 'action', close: 'end_action' },\r\n        { open: 'step', close: 'end_step' },\r\n        { open: 'initial_step', close: 'end_step' },\r\n        { open: 'transaction', close: 'end_transaction' },\r\n        { open: 'configuration', close: 'end_configuration' },\r\n        { open: 'tcp', close: 'end_tcp' },\r\n        { open: 'recource', close: 'end_recource' },\r\n        { open: 'channel', close: 'end_channel' },\r\n        { open: 'library', close: 'end_library' },\r\n        { open: 'folder', close: 'end_folder' },\r\n        { open: 'binaries', close: 'end_binaries' },\r\n        { open: 'includes', close: 'end_includes' },\r\n        { open: 'sources', close: 'end_sources' }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: 'var', close: 'end_var' },\r\n        { open: 'var_input', close: 'end_var' },\r\n        { open: 'var_output', close: 'end_var' },\r\n        { open: 'var_in_out', close: 'end_var' },\r\n        { open: 'var_temp', close: 'end_var' },\r\n        { open: 'var_global', close: 'end_var' },\r\n        { open: 'var_access', close: 'end_var' },\r\n        { open: 'var_external', close: 'end_var' },\r\n        { open: 'type', close: 'end_type' },\r\n        { open: 'struct', close: 'end_struct' },\r\n        { open: 'program', close: 'end_program' },\r\n        { open: 'function', close: 'end_function' },\r\n        { open: 'function_block', close: 'end_function_block' },\r\n        { open: 'action', close: 'end_action' },\r\n        { open: 'step', close: 'end_step' },\r\n        { open: 'initial_step', close: 'end_step' },\r\n        { open: 'transaction', close: 'end_transaction' },\r\n        { open: 'configuration', close: 'end_configuration' },\r\n        { open: 'tcp', close: 'end_tcp' },\r\n        { open: 'recource', close: 'end_recource' },\r\n        { open: 'channel', close: 'end_channel' },\r\n        { open: 'library', close: 'end_library' },\r\n        { open: 'folder', close: 'end_folder' },\r\n        { open: 'binaries', close: 'end_binaries' },\r\n        { open: 'includes', close: 'end_includes' },\r\n        { open: 'sources', close: 'end_sources' }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.st',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' }\r\n    ],\r\n    keywords: ['if', 'end_if', 'elsif', 'else', 'case', 'of', 'to', '__try', '__catch', '__finally',\r\n        'do', 'with', 'by', 'while', 'repeat', 'end_while', 'end_repeat', 'end_case',\r\n        'for', 'end_for', 'task', 'retain', 'non_retain', 'constant', 'with', 'at',\r\n        'exit', 'return', 'interval', 'priority', 'address', 'port', 'on_channel',\r\n        'then', 'iec', 'file', 'uses', 'version', 'packagetype', 'displayname',\r\n        'copyright', 'summary', 'vendor', 'common_source', 'from', 'extends'],\r\n    constant: ['false', 'true', 'null'],\r\n    defineKeywords: [\r\n        'var', 'var_input', 'var_output', 'var_in_out', 'var_temp', 'var_global',\r\n        'var_access', 'var_external', 'end_var',\r\n        'type', 'end_type', 'struct', 'end_struct', 'program', 'end_program',\r\n        'function', 'end_function', 'function_block', 'end_function_block',\r\n        'interface', 'end_interface', 'method', 'end_method',\r\n        'property', 'end_property', 'namespace', 'end_namespace',\r\n        'configuration', 'end_configuration', 'tcp', 'end_tcp', 'resource',\r\n        'end_resource', 'channel', 'end_channel', 'library', 'end_library',\r\n        'folder', 'end_folder', 'binaries', 'end_binaries', 'includes',\r\n        'end_includes', 'sources', 'end_sources',\r\n        'action', 'end_action', 'step', 'initial_step', 'end_step', 'transaction', 'end_transaction'\r\n    ],\r\n    typeKeywords: ['int', 'sint', 'dint', 'lint', 'usint', 'uint', 'udint', 'ulint',\r\n        'real', 'lreal', 'time', 'date', 'time_of_day', 'date_and_time', 'string',\r\n        'bool', 'byte', 'word', 'dword', 'array', 'pointer', 'lword'],\r\n    operators: ['=', '>', '<', ':', ':=', '<=', '>=', '<>', '&', '+', '-', '*', '**',\r\n        'MOD', '^', 'or', 'and', 'not', 'xor', 'abs', 'acos', 'asin', 'atan', 'cos',\r\n        'exp', 'expt', 'ln', 'log', 'sin', 'sqrt', 'tan', 'sel', 'max', 'min', 'limit',\r\n        'mux', 'shl', 'shr', 'rol', 'ror', 'indexof', 'sizeof', 'adr', 'adrinst',\r\n        'bitadr', 'is_valid', 'ref', 'ref_to'],\r\n    builtinVariables: [],\r\n    builtinFunctions: ['sr', 'rs', 'tp', 'ton', 'tof', 'eq', 'ge', 'le', 'lt',\r\n        'ne', 'round', 'trunc', 'ctd', 'сtu', 'ctud', 'r_trig', 'f_trig',\r\n        'move', 'concat', 'delete', 'find', 'insert', 'left', 'len', 'replace',\r\n        'right', 'rtc'],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    // C# style strings\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            [/(\\.\\.)/, 'delimiter'],\r\n            [/\\b(16#[0-9A-Fa-f\\_]*)+\\b/, 'number.hex'],\r\n            [/\\b(2#[01\\_]+)+\\b/, 'number.binary'],\r\n            [/\\b(8#[0-9\\_]*)+\\b/, 'number.octal'],\r\n            [/\\b\\d*\\.\\d+([eE][\\-+]?\\d+)?\\b/, 'number.float'],\r\n            [/\\b(L?REAL)#[0-9\\_\\.e]+\\b/, 'number.float'],\r\n            [/\\b(BYTE|(?:D|L)?WORD|U?(?:S|D|L)?INT)#[0-9\\_]+\\b/, 'number'],\r\n            [/\\d+/, 'number'],\r\n            [/\\b(T|DT|TOD)#[0-9:-_shmyd]+\\b/, 'tag'],\r\n            [/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]+/, 'tag'],\r\n            [/\\%(I|Q|M)[0-9\\.]*/, 'tag'],\r\n            [/\\b[A-Za-z]{1,6}#[0-9]+\\b/, 'tag'],\r\n            [/\\b(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]+\\b/, 'predefined'],\r\n            [/\\b[A_Za-z]+(_TO_)[A_Za-z]+\\b/, 'predefined'],\r\n            [/[;]/, 'delimiter'],\r\n            [/[.]/, { token: 'delimiter', next: '@params' }],\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@operators': 'operators',\r\n                        '@keywords': 'keyword',\r\n                        '@typeKeywords': 'type',\r\n                        '@defineKeywords': 'variable',\r\n                        '@constant': 'constant',\r\n                        '@builtinVariables': 'predefined',\r\n                        '@builtinFunctions': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            { include: '@whitespace' },\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string_dq' }],\r\n            [/'/, { token: 'string.quote', bracket: '@open', next: '@string_sq' }],\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        params: [\r\n            [/\\b[A-Za-z0-9_]+\\b(?=\\()/, { token: 'identifier', next: '@pop' }],\r\n            [/\\b[A-Za-z0-9_]+\\b/, 'variable.name', '@pop']\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@push'],\r\n            [\"\\\\*/\", 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        comment2: [\r\n            [/[^\\(*]+/, 'comment'],\r\n            [/\\(\\*/, 'comment', '@push'],\r\n            [\"\\\\*\\\\)\", 'comment', '@pop'],\r\n            [/[\\(*]/, 'comment']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\(\\*/, 'comment', '@comment2'],\r\n        ],\r\n        string_dq: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ],\r\n        string_sq: [\r\n            [/[^\\\\']+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ]\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/monaco-editor/esm/vs/basic-languages/st/st.js"],"sourceRoot":""}